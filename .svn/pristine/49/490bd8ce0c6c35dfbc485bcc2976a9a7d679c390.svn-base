<?php
//Include Common Files @1-42B31A9F
define("RelativePath", ".");
define("PathToCurrentPage", "/");
define("FileName", "report_f21_2211_disease_facilities.php");
include_once(RelativePath . "/Common.php");
include_once(RelativePath . "/Template.php");
include_once(RelativePath . "/Sorter.php");
include_once(RelativePath . "/Navigator.php");
//End Include Common Files

//Include Page implementation @2-203FAEA1
include_once(RelativePath . "/topmenu.php");
//End Include Page implementation

class clsRecordpregnancySearch { //pregnancySearch Class @9-F8777AB7

//Variables @9-9E315808

    // Public variables
    public $ComponentType = "Record";
    public $ComponentName;
    public $Parent;
    public $HTMLFormAction;
    public $PressedButton;
    public $Errors;
    public $ErrorBlock;
    public $FormSubmitted;
    public $FormEnctype;
    public $Visible;
    public $IsEmpty;

    public $CCSEvents = "";
    public $CCSEventResult;

    public $RelativePath = "";

    public $InsertAllowed = false;
    public $UpdateAllowed = false;
    public $DeleteAllowed = false;
    public $ReadAllowed   = false;
    public $EditMode      = false;
    public $ds;
    public $DataSource;
    public $ValidatingControls;
    public $Controls;
    public $Attributes;

    // Class variables
//End Variables

//Class_Initialize Event @9-85520FF4
    function clsRecordpregnancySearch($RelativePath, & $Parent)
    {

        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->Visible = true;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Errors = new clsErrors();
        $this->ErrorBlock = "Record pregnancySearch/Error";
        $this->ReadAllowed = true;
        if($this->Visible)
        {
            $this->ComponentName = "pregnancySearch";
            $this->Attributes = new clsAttributes($this->ComponentName . ":");
            $CCSForm = explode(":", CCGetFromGet("ccsForm", ""), 2);
            if(sizeof($CCSForm) == 1)
                $CCSForm[1] = "";
            list($FormName, $FormMethod) = $CCSForm;
            $this->FormEnctype = "application/x-www-form-urlencoded";
            $this->FormSubmitted = ($FormName == $this->ComponentName);
            $Method = $this->FormSubmitted ? ccsPost : ccsGet;
            $this->Button_DoSearch = new clsButton("Button_DoSearch", $Method, $this);
            $this->s_PregRegDate = new clsControl(ccsTextBox, "s_PregRegDate", "s_PregRegDate", ccsDate, array("ShortDate"), CCGetRequestParam("s_PregRegDate", $Method, NULL), $this);
            $this->DatePicker_s_PregRegDate = new clsDatePicker("DatePicker_s_PregRegDate", "pregnancySearch", "s_PregRegDate", $this);
            $this->s_PregRegDateTo = new clsControl(ccsTextBox, "s_PregRegDateTo", "s_PregRegDateTo", ccsDate, array("ShortDate"), CCGetRequestParam("s_PregRegDateTo", $Method, NULL), $this);
            $this->DatePicker_s_PregRegDateTo = new clsDatePicker("DatePicker_s_PregRegDateTo", "pregnancySearch", "s_PregRegDateTo", $this);
        }
    }
//End Class_Initialize Event

//Validate Method @9-2B4B4365
    function Validate()
    {
        global $CCSLocales;
        $Validation = true;
        $Where = "";
        $Validation = ($this->s_PregRegDate->Validate() && $Validation);
        $Validation = ($this->s_PregRegDateTo->Validate() && $Validation);
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "OnValidate", $this);
        $Validation =  $Validation && ($this->s_PregRegDate->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_PregRegDateTo->Errors->Count() == 0);
        return (($this->Errors->Count() == 0) && $Validation);
    }
//End Validate Method

//CheckErrors Method @9-3853F3B1
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->s_PregRegDate->Errors->Count());
        $errors = ($errors || $this->DatePicker_s_PregRegDate->Errors->Count());
        $errors = ($errors || $this->s_PregRegDateTo->Errors->Count());
        $errors = ($errors || $this->DatePicker_s_PregRegDateTo->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//MasterDetail @9-ED598703
function SetPrimaryKeys($keyArray)
{
    $this->PrimaryKeys = $keyArray;
}
function GetPrimaryKeys()
{
    return $this->PrimaryKeys;
}
function GetPrimaryKey($keyName)
{
    return $this->PrimaryKeys[$keyName];
}
//End MasterDetail

//Operation Method @9-CCE86E3B
    function Operation()
    {
        if(!$this->Visible)
            return;

        global $Redirect;
        global $FileName;

        if(!$this->FormSubmitted) {
            return;
        }

        if($this->FormSubmitted) {
            $this->PressedButton = "Button_DoSearch";
            if($this->Button_DoSearch->Pressed) {
                $this->PressedButton = "Button_DoSearch";
            }
        }
        $Redirect = "report_f21_2211_disease_facilities.php";
        if($this->Validate()) {
            if($this->PressedButton == "Button_DoSearch") {
                $Redirect = "report_f21_2211_disease_facilities.php" . "?" . CCMergeQueryStrings(CCGetQueryString("Form", array("Button_DoSearch", "Button_DoSearch_x", "Button_DoSearch_y")));
                if(!CCGetEvent($this->Button_DoSearch->CCSEvents, "OnClick", $this->Button_DoSearch)) {
                    $Redirect = "";
                }
            }
        } else {
            $Redirect = "";
        }
    }
//End Operation Method

//Show Method @9-A506755C
    function Show()
    {
        global $CCSUseAmp;
        global $Tpl;
        global $FileName;
        global $CCSLocales;
        $Error = "";

        if(!$this->Visible)
            return;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $RecordBlock = "Record " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $RecordBlock;
        $this->EditMode = $this->EditMode && $this->ReadAllowed;
        if (!$this->FormSubmitted) {
        }

        if($this->FormSubmitted || $this->CheckErrors()) {
            $Error = "";
            $Error = ComposeStrings($Error, $this->s_PregRegDate->Errors->ToString());
            $Error = ComposeStrings($Error, $this->DatePicker_s_PregRegDate->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_PregRegDateTo->Errors->ToString());
            $Error = ComposeStrings($Error, $this->DatePicker_s_PregRegDateTo->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Errors->ToString());
            $Tpl->SetVar("Error", $Error);
            $Tpl->Parse("Error", false);
        }
        $CCSForm = $this->EditMode ? $this->ComponentName . ":" . "Edit" : $this->ComponentName;
        $this->HTMLFormAction = $FileName . "?" . CCAddParam(CCGetQueryString("QueryString", ""), "ccsForm", $CCSForm);
        $Tpl->SetVar("Action", !$CCSUseAmp ? $this->HTMLFormAction : str_replace("&", "&amp;", $this->HTMLFormAction));
        $Tpl->SetVar("HTMLFormName", $this->ComponentName);
        $Tpl->SetVar("HTMLFormEnctype", $this->FormEnctype);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        $this->Attributes->Show();
        if(!$this->Visible) {
            $Tpl->block_path = $ParentPath;
            return;
        }

        $this->Button_DoSearch->Show();
        $this->s_PregRegDate->Show();
        $this->DatePicker_s_PregRegDate->Show();
        $this->s_PregRegDateTo->Show();
        $this->DatePicker_s_PregRegDateTo->Show();
        $Tpl->parse();
        $Tpl->block_path = $ParentPath;
    }
//End Show Method

} //End pregnancySearch Class @9-FCB6E20C

//Report1 ReportGroup class @528-CC6A3ECB
class clsReportGroupReport1 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport1(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report1 ReportGroup class

//Report1 GroupsCollection class @528-FF4F9DD1
class clsGroupsCollectionReport1 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport1(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport1($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report1 GroupsCollection class

class clsReportReport1 { //Report1 Class @528-BC2FB08C

//Report1 Variables @528-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report1 Variables

//Class_Initialize Event @528-26D03480
    function clsReportReport1($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report1";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport1DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @528-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @528-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @528-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @528-0EACD124
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport1($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report1 Class @528-FCB6E20C

class clsReport1DataSource extends clsDBregistry_db {  //Report1DataSource Class @528-1787F62C

//DataSource Variables @528-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @528-D9503C87
    function clsReport1DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report1";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @528-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @528-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @528-77882D33
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.44.1' \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.44.1' \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @528-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report1DataSource Class @528-FCB6E20C

//Report2 ReportGroup class @543-6B05D9A9
class clsReportGroupReport2 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport2(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report2 ReportGroup class

//Report2 GroupsCollection class @543-6C9EABC8
class clsGroupsCollectionReport2 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport2(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport2($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report2 GroupsCollection class

class clsReportReport2 { //Report2 Class @543-9702E34F

//Report2 Variables @543-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report2 Variables

//Class_Initialize Event @543-2FEE46C0
    function clsReportReport2($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report2";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport2DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @543-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @543-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @543-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @543-89E4F5FD
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport2($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report2 Class @543-FCB6E20C

class clsReport2DataSource extends clsDBregistry_db {  //Report2DataSource Class @543-9C54C835

//DataSource Variables @543-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @543-E7D6A77A
    function clsReport2DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report2";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @543-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @543-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @543-8044686B
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.45.0' \n" .
        "OR complications.ICD10ID = 'O.67.0' \n" .
        "OR complications.ICD10ID = 'O.46.0')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.45.0' \n" .
        "OR pcomplications.ICD10ID = 'O.67.0' \n" .
        "OR pcomplications.ICD10ID = 'O.46.0') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @543-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report2DataSource Class @543-FCB6E20C

//Report3 ReportGroup class @550-09DF7B77
class clsReportGroupReport3 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport3(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report3 ReportGroup class

//Report3 GroupsCollection class @550-AB014400
class clsGroupsCollectionReport3 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport3(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport3($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report3 GroupsCollection class

class clsReportReport3 { //Report3 Class @550-8E19D20E

//Report3 Variables @550-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report3 Variables

//Class_Initialize Event @550-28FB9700
    function clsReportReport3($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report3";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport3DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @550-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @550-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @550-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @550-420C1475
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport3($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report3 Class @550-FCB6E20C

class clsReport3DataSource extends clsDBregistry_db {  //Report3DataSource Class @550-53CADFFD

//DataSource Variables @550-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @550-F254D1D1
    function clsReport3DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report3";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @550-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @550-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @550-C729636C
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.45.8' \n" .
        "OR complications.ICD10ID = 'O.45.9')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.45.8' \n" .
        "OR pcomplications.ICD10ID = 'O.45.9') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease \n" .
        "\n" .
        "";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @550-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report3DataSource Class @550-FCB6E20C

//Report4 ReportGroup class @557-FEAB112C
class clsReportGroupReport4 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport4(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report4 ReportGroup class

//Report4 GroupsCollection class @557-904DC1BB
class clsGroupsCollectionReport4 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport4(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport4($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report4 GroupsCollection class

class clsReportReport4 { //Report4 Class @557-C15844C9

//Report4 Variables @557-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report4 Variables

//Class_Initialize Event @557-3D92A240
    function clsReportReport4($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report4";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport4DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @557-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @557-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @557-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @557-5C05BA0E
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport4($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report4 Class @557-FCB6E20C

class clsReport4DataSource extends clsDBregistry_db {  //Report4DataSource Class @557-5083B246

//DataSource Variables @557-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @557-9ADB9080
    function clsReport4DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report4";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @557-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @557-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @557-FCF988CE
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID >= 'O.10.' \n" .
        "AND complications.ICD10ID <= 'O.16.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID >= 'O.10.' \n" .
        "AND pcomplications.ICD10ID <= 'O.16.') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @557-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report4DataSource Class @557-FCB6E20C

//Report5 ReportGroup class @564-9C71B3F2
class clsReportGroupReport5 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport5(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report5 ReportGroup class

//Report5 GroupsCollection class @564-57D22E73
class clsGroupsCollectionReport5 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport5(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport5($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report5 GroupsCollection class

class clsReportReport5 { //Report5 Class @564-D8437588

//Report5 Variables @564-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report5 Variables

//Class_Initialize Event @564-3A877380
    function clsReportReport5($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report5";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport5DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @564-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @564-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @564-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @564-97ED5B86
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport5($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report5 Class @564-FCB6E20C

class clsReport5DataSource extends clsDBregistry_db {  //Report5DataSource Class @564-9F1DA58E

//DataSource Variables @564-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @564-8F59E62B
    function clsReport5DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report5";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @564-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @564-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @564-D77FDD49
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.11.' \n" .
        "OR complications.ICD10ID = 'O.13.'\n" .
        "OR complications.ICD10ID >= 'O.14.'\n" .
        "AND complications.ICD10ID <= 'O.15.9')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.11.' \n" .
        "OR pcomplications.ICD10ID = 'O.13.'\n" .
        "OR pcomplications.ICD10ID >= 'O.14.'\n" .
        "AND pcomplications.ICD10ID <= 'O.15.9') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @564-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report5DataSource Class @564-FCB6E20C

//Report6 ReportGroup class @571-3B1E5490
class clsReportGroupReport6 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport6(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report6 ReportGroup class

//Report6 GroupsCollection class @571-C403186A
class clsGroupsCollectionReport6 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport6(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport6($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report6 GroupsCollection class

class clsReportReport6 { //Report6 Class @571-F36E264B

//Report6 Variables @571-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report6 Variables

//Class_Initialize Event @571-33B901C0
    function clsReportReport6($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report6";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport6DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @571-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @571-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @571-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @571-10A57F5F
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport6($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report6 Class @571-FCB6E20C

class clsReport6DataSource extends clsDBregistry_db {  //Report6DataSource Class @571-14CE9B97

//DataSource Variables @571-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @571-B1DF7DD6
    function clsReport6DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report6";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @571-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @571-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @571-09C10339
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.14.1' \n" .
        "OR complications.ICD10ID = 'O.15.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.14.1' \n" .
        "OR pcomplications.ICD10ID = 'O.15.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @571-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report6DataSource Class @571-FCB6E20C

//Report7 ReportGroup class @578-59C4F64E
class clsReportGroupReport7 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport7(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report7 ReportGroup class

//Report7 GroupsCollection class @578-039CF7A2
class clsGroupsCollectionReport7 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport7(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport7($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report7 GroupsCollection class

class clsReportReport7 { //Report7 Class @578-EA75170A

//Report7 Variables @578-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report7 Variables

//Class_Initialize Event @578-34ACD000
    function clsReportReport7($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report7";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport7DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @578-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @578-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @578-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @578-DB4D9ED7
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport7($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report7 Class @578-FCB6E20C

class clsReport7DataSource extends clsDBregistry_db {  //Report7DataSource Class @578-DB508C5F

//DataSource Variables @578-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @578-A45D0B7D
    function clsReport7DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report7";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @578-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @578-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @578-763C093C
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.86.2' \n" .
        "OR complications.ICD10ID = 'O.86.3')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.86.2' \n" .
        "OR pcomplications.ICD10ID = 'O.86.3')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @578-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report7DataSource Class @578-FCB6E20C

//Report8 ReportGroup class @585-0E878667
class clsReportGroupReport8 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport8(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report8 ReportGroup class

//Report8 GroupsCollection class @585-B29A131C
class clsGroupsCollectionReport8 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport8(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport8($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report8 GroupsCollection class

class clsReportReport8 { //Report8 Class @585-6DED0BC5

//Report8 Variables @585-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report8 Variables

//Class_Initialize Event @585-196B6B40
    function clsReportReport8($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report8";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport8DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @585-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @585-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @585-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @585-2CB623A9
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport8($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report8 Class @585-FCB6E20C

class clsReport8DataSource extends clsDBregistry_db {  //Report8DataSource Class @585-125C40E1

//DataSource Variables @585-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @585-60C1FF74
    function clsReport8DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report8";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @585-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @585-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @585-B07DDEC2
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID >= 'O.24.' \n" .
        "AND complications.ICD10ID < 'O.25.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID >= 'O.24.' \n" .
        "AND pcomplications.ICD10ID < 'O.25.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @585-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report8DataSource Class @585-FCB6E20C

//Report9 ReportGroup class @592-6C5D24B9
class clsReportGroupReport9 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport9(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report9 ReportGroup class

//Report9 GroupsCollection class @592-7505FCD4
class clsGroupsCollectionReport9 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport9(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport9($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report9 GroupsCollection class

class clsReportReport9 { //Report9 Class @592-74F63A84

//Report9 Variables @592-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report9 Variables

//Class_Initialize Event @592-1E7EBA80
    function clsReportReport9($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report9";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport9DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @592-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @592-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @592-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @592-E75EC221
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport9($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report9 Class @592-FCB6E20C

class clsReport9DataSource extends clsDBregistry_db {  //Report9DataSource Class @592-DDC25729

//DataSource Variables @592-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @592-754389DF
    function clsReport9DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report9";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @592-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @592-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @592-930B13F3
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.90.5' \n" .
        "OR complications.ICD10ID = 'O.99.2')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.90.5' \n" .
        "OR pcomplications.ICD10ID = 'O.99.2')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @592-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report9DataSource Class @592-FCB6E20C

//Report10 ReportGroup class @599-712A623A
class clsReportGroupReport10 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport10(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report10 ReportGroup class

//Report10 GroupsCollection class @599-BC5775F3
class clsGroupsCollectionReport10 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport10(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport10($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report10 GroupsCollection class

class clsReportReport10 { //Report10 Class @599-E2EA314C

//Report10 Variables @599-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report10 Variables

//Class_Initialize Event @599-3D80E559
    function clsReportReport10($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report10";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport10DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @599-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @599-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @599-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @599-C8A531C0
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport10($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report10 Class @599-FCB6E20C

class clsReport10DataSource extends clsDBregistry_db {  //Report10DataSource Class @599-F7F77921

//DataSource Variables @599-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @599-C57F494F
    function clsReport10DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report10";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @599-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @599-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @599-59AA3CED
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.99.2'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.99.2'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @599-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report10DataSource Class @599-FCB6E20C

//Report11 ReportGroup class @607-A64FCDFA
class clsReportGroupReport11 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport11(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report11 ReportGroup class

//Report11 GroupsCollection class @607-86640555
class clsGroupsCollectionReport11 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport11(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport11($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report11 GroupsCollection class

class clsReportReport11 { //Report11 Class @607-FBF1000D

//Report11 Variables @607-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report11 Variables

//Class_Initialize Event @607-89E45E32
    function clsReportReport11($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report11";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport11DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @607-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @607-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @607-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @607-034DD048
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport11($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report11 Class @607-FCB6E20C

class clsReport11DataSource extends clsDBregistry_db {  //Report11DataSource Class @607-38696EE9

//DataSource Variables @607-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @607-A5A841BD
    function clsReport11DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report11";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @607-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @607-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @607-E5B65F11
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.99.0'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.99.0'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @607-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report11DataSource Class @607-FCB6E20C

//Report12 ReportGroup class @614-04903BFB
class clsReportGroupReport12 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport12(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report12 ReportGroup class

//Report12 GroupsCollection class @614-C83194BF
class clsGroupsCollectionReport12 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport12(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport12($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report12 GroupsCollection class

class clsReportReport12 { //Report12 Class @614-D0DC53CE

//Report12 Variables @614-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report12 Variables

//Class_Initialize Event @614-8E3895CE
    function clsReportReport12($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report12";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport12DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @614-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @614-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @614-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @614-8405F491
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport12($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report12 Class @614-FCB6E20C

class clsReport12DataSource extends clsDBregistry_db {  //Report12DataSource Class @614-B3BA50F0

//DataSource Variables @614-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @614-04D158AB
    function clsReport12DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report12";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @614-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @614-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @614-46FF9EA8
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.99.4'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.99.4'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @614-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report12DataSource Class @614-FCB6E20C

//Report13 ReportGroup class @621-D3F5943B
class clsReportGroupReport13 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport13(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report13 ReportGroup class

//Report13 GroupsCollection class @621-F202E419
class clsGroupsCollectionReport13 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport13(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport13($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report13 GroupsCollection class

class clsReportReport13 { //Report13 Class @621-C9C7628F

//Report13 Variables @621-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report13 Variables

//Class_Initialize Event @621-3A5C2EA5
    function clsReportReport13($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report13";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport13DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @621-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @621-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @621-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @621-4FED1519
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport13($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report13 Class @621-FCB6E20C

class clsReport13DataSource extends clsDBregistry_db {  //Report13DataSource Class @621-7C244738

//DataSource Variables @621-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @621-64065059
    function clsReport13DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report13";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @621-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @621-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @621-70521D82
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID >= 'O.64.' \n" .
        "AND complications.ICD10ID < 'O.67.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID >= 'O.64.' \n" .
        "AND pcomplications.ICD10ID < 'O.67.') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @621-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report13DataSource Class @621-FCB6E20C

//Report14 ReportGroup class @628-9A5ED1B8
class clsReportGroupReport14 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport14(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report14 ReportGroup class

//Report14 GroupsCollection class @628-549AB76B
class clsGroupsCollectionReport14 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport14(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport14($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report14 GroupsCollection class

class clsReportReport14 { //Report14 Class @628-8686F448

//Report14 Variables @628-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report14 Variables

//Class_Initialize Event @628-81810236
    function clsReportReport14($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report14";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport14DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @628-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @628-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @628-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @628-51E4BB62
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport14($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report14 Class @628-FCB6E20C

class clsReport14DataSource extends clsDBregistry_db {  //Report14DataSource Class @628-7F6D2A83

//DataSource Variables @628-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @628-9D526CC6
    function clsReport14DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report14";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @628-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @628-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @628-6C7EAA43
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID >= 'O.62.' \n" .
        "AND complications.ICD10ID < 'O.64.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID >= 'O.62.' \n" .
        "AND pcomplications.ICD10ID < 'O.64.') \n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @628-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report14DataSource Class @628-FCB6E20C

//Report15 ReportGroup class @635-4D3B7E78
class clsReportGroupReport15 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport15(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report15 ReportGroup class

//Report15 GroupsCollection class @635-6EA9C7CD
class clsGroupsCollectionReport15 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport15(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport15($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report15 GroupsCollection class

class clsReportReport15 { //Report15 Class @635-9F9DC509

//Report15 Variables @635-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report15 Variables

//Class_Initialize Event @635-35E5B95D
    function clsReportReport15($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report15";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport15DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @635-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @635-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @635-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @635-9A0C5AEA
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport15($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report15 Class @635-FCB6E20C

class clsReport15DataSource extends clsDBregistry_db {  //Report15DataSource Class @635-B0F33D4B

//DataSource Variables @635-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @635-FD856434
    function clsReport15DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report15";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @635-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @635-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @635-57D036AE
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.70.2' \n" .
        "OR complications.ICD10ID = 'O.70.3')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.70.2' \n" .
        "OR pcomplications.ICD10ID = 'O.70.3')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @635-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report15DataSource Class @635-FCB6E20C

//Report16 ReportGroup class @642-EFE48879
class clsReportGroupReport16 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport16(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report16 ReportGroup class

//Report16 GroupsCollection class @642-20FC5627
class clsGroupsCollectionReport16 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport16(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport16($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report16 GroupsCollection class

class clsReportReport16 { //Report16 Class @642-B4B096CA

//Report16 Variables @642-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report16 Variables

//Class_Initialize Event @642-323972A1
    function clsReportReport16($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report16";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport16DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @642-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @642-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @642-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @642-1D447E33
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport16($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report16 Class @642-FCB6E20C

class clsReport16DataSource extends clsDBregistry_db {  //Report16DataSource Class @642-3B200352

//DataSource Variables @642-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @642-5CFC7D22
    function clsReport16DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report16";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @642-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @642-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @642-40F936A7
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.71.0' \n" .
        "OR complications.ICD10ID = 'O.71.1')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.71.0' \n" .
        "OR pcomplications.ICD10ID = 'O.71.1')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @642-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report16DataSource Class @642-FCB6E20C

//Report17 ReportGroup class @649-388127B9
class clsReportGroupReport17 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport17(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report17 ReportGroup class

//Report17 GroupsCollection class @649-1ACF2681
class clsGroupsCollectionReport17 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport17(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport17($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report17 GroupsCollection class

class clsReportReport17 { //Report17 Class @649-ADABA78B

//Report17 Variables @649-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report17 Variables

//Class_Initialize Event @649-865DC9CA
    function clsReportReport17($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report17";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport17DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @649-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @649-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @649-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @649-D6AC9FBB
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport17($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report17 Class @649-FCB6E20C

class clsReport17DataSource extends clsDBregistry_db {  //Report17DataSource Class @649-F4BE149A

//DataSource Variables @649-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @649-3C2B75D0
    function clsReport17DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report17";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @649-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @649-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @649-DC9C6414
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.72.0' \n" .
        "OR complications.ICD10ID = 'O.72.1')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.72.0' \n" .
        "OR pcomplications.ICD10ID = 'O.72.1')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @649-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report17DataSource Class @649-FCB6E20C

//Report18 ReportGroup class @656-7CB2037F
class clsReportGroupReport18 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport18(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report18 ReportGroup class

//Report18 GroupsCollection class @656-B6BDF682
class clsGroupsCollectionReport18 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport18(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport18($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report18 GroupsCollection class

class clsReportReport18 { //Report18 Class @656-2A33BB44

//Report18 Variables @656-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report18 Variables

//Class_Initialize Event @656-9EF22DC6
    function clsReportReport18($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report18";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport18DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @656-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @656-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @656-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @656-215722C5
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport18($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report18 Class @656-FCB6E20C

class clsReport18DataSource extends clsDBregistry_db {  //Report18DataSource Class @656-3DB2D824

//DataSource Variables @656-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @656-7525025D
    function clsReport18DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report18";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @656-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @656-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @656-FF28532E
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.75.3' \n" .
        "OR complications.ICD10ID = 'O.85.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.75.3' \n" .
        "OR pcomplications.ICD10ID = 'O.85.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @656-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report18DataSource Class @656-FCB6E20C

//Report19 ReportGroup class @663-ABD7ACBF
class clsReportGroupReport19 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport19(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report19 ReportGroup class

//Report19 GroupsCollection class @663-8C8E8624
class clsGroupsCollectionReport19 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport19(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport19($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report19 GroupsCollection class

class clsReportReport19 { //Report19 Class @663-33288A05

//Report19 Variables @663-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report19 Variables

//Class_Initialize Event @663-2A9696AD
    function clsReportReport19($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report19";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport19DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @663-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @663-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @663-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @663-EABFC34D
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport19($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report19 Class @663-FCB6E20C

class clsReport19DataSource extends clsDBregistry_db {  //Report19DataSource Class @663-F22CCFEC

//DataSource Variables @663-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @663-15F20AAF
    function clsReport19DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report19";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @663-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @663-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @663-D68D5E25
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.85.'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.85.'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @663-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report19DataSource Class @663-FCB6E20C

//Report20 ReportGroup class @670-068F8D5A
class clsReportGroupReport20 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport20(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report20 ReportGroup class

//Report20 GroupsCollection class @670-FCC62B04
class clsGroupsCollectionReport20 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport20(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport20($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report20 GroupsCollection class

class clsReportReport20 { //Report20 Class @670-E0AC8F15

//Report20 Variables @670-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report20 Variables

//Class_Initialize Event @670-898C87A5
    function clsReportReport20($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report20";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport20DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @670-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @670-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @670-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @670-372D1394
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport20($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report20 Class @670-FCB6E20C

class clsReport20DataSource extends clsDBregistry_db {  //Report20DataSource Class @670-931702DF

//DataSource Variables @670-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @670-310A8507
    function clsReport20DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report20";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @670-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @670-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @670-3D392536
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID >= 'O.87.' \n" .
        "AND complications.ICD10ID < 'O.88.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID >= 'O.87.' \n" .
        "AND pcomplications.ICD10ID < 'O.88.')\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @670-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report20DataSource Class @670-FCB6E20C

//Report21 ReportGroup class @677-D1EA229A
class clsReportGroupReport21 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport21(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report21 ReportGroup class

//Report21 GroupsCollection class @677-C6F55BA2
class clsGroupsCollectionReport21 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport21(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport21($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report21 GroupsCollection class

class clsReportReport21 { //Report21 Class @677-F9B7BE54

//Report21 Variables @677-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report21 Variables

//Class_Initialize Event @677-3DE83CCE
    function clsReportReport21($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report21";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport21DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @677-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @677-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @677-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @677-FCC5F21C
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport21($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report21 Class @677-FCB6E20C

class clsReport21DataSource extends clsDBregistry_db {  //Report21DataSource Class @677-5C891517

//DataSource Variables @677-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @677-51DD8DF5
    function clsReport21DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report21";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @677-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @677-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @677-D201E192
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.91.1'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM (((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.91.1'\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @677-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report21DataSource Class @677-FCB6E20C

//Report22 ReportGroup class @684-7335D49B
class clsReportGroupReport22 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport22(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report22 ReportGroup class

//Report22 GroupsCollection class @684-88A0CA48
class clsGroupsCollectionReport22 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport22(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport22($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report22 GroupsCollection class

class clsReportReport22 { //Report22 Class @684-D29AED97

//Report22 Variables @684-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report22 Variables

//Class_Initialize Event @684-3A34F732
    function clsReportReport22($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report22";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport22DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @684-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @684-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @684-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @684-7B8DD6C5
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport22($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report22 Class @684-FCB6E20C

class clsReport22DataSource extends clsDBregistry_db {  //Report22DataSource Class @684-D75A2B0E

//DataSource Variables @684-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @684-F0A494E3
    function clsReport22DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report22";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @684-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @684-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @684-6778B22E
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM ((((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID) LEFT JOIN procedures ON\n" .
        "procedures.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "(complications.ICD10ID = 'O.72.0' \n" .
        "OR complications.ICD10ID = 'O.72.1')\n" .
        "AND procedures.ProcedureTypeID = 24\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM ((((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID) LEFT JOIN procedures ON\n" .
        "procedures.DeliveryID = delivery.DeliveryID\n" .
        "\n" .
        "WHERE \n" .
        "(pcomplications.ICD10ID = 'O.72.0' \n" .
        "OR pcomplications.ICD10ID = 'O.72.1')\n" .
        "AND procedures.ProcedureTypeID = 24\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @684-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report22DataSource Class @684-FCB6E20C

//Report23 ReportGroup class @691-A4507B5B
class clsReportGroupReport23 {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $TotalSum_COUNT_disease_1, $_TotalSum_COUNT_disease_1Attributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;

    function clsReportGroupReport23(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetTotalValue($mode);
        $this->_TotalSum_COUNT_disease_1Attributes = $this->Parent->TotalSum_COUNT_disease_1->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->TotalSum_COUNT_disease_1 = $this->TotalSum_COUNT_disease_1;
        $Header->_TotalSum_COUNT_disease_1Attributes = $this->_TotalSum_COUNT_disease_1Attributes;
    }
    function ChangeTotalControls() {
        $this->TotalSum_COUNT_disease_1 = $this->Parent->TotalSum_COUNT_disease_1->GetValue();
    }
}
//End Report23 ReportGroup class

//Report23 GroupsCollection class @691-B293BAEE
class clsGroupsCollectionReport23 {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectionReport23(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupReport23($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->TotalSum_COUNT_disease_1->Value = $this->Parent->TotalSum_COUNT_disease_1->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End Report23 GroupsCollection class

class clsReportReport23 { //Report23 Class @691-CB81DCD6

//Report23 Variables @691-5DEB194B

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = false;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
//End Report23 Variables

//Class_Initialize Event @691-8E504C59
    function clsReportReport23($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "Report23";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->Errors = new clsErrors();
        $this->DataSource = new clsReport23DataSource($this);
        $this->ds = & $this->DataSource;
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }

        $this->TotalSum_COUNT_disease_1 = new clsControl(ccsReportLabel, "TotalSum_COUNT_disease_1", "TotalSum_COUNT_disease_1", ccsInteger, "", "", $this);
        $this->TotalSum_COUNT_disease_1->TotalFunction = "Sum";
        $this->TotalSum_COUNT_disease_1->EmptyText = "0";
    }
//End Class_Initialize Event

//Initialize Method @691-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @691-F36D5D4E
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->TotalSum_COUNT_disease_1->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @691-21A607F5
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->TotalSum_COUNT_disease_1->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @691-B065374D
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["sess_Facilities"] = CCGetSession("s_Facilities", NULL);
        $this->DataSource->Parameters["urls_PregRegDate"] = CCGetFromGet("s_PregRegDate", NULL);
        $this->DataSource->Parameters["urls_PregRegDateTo"] = CCGetFromGet("s_PregRegDateTo", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $Groups = new clsGroupsCollectionReport23($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->TotalSum_COUNT_disease_1->SetValue($this->DataSource->TotalSum_COUNT_disease_1->GetValue());
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            $Groups->AddItem();
            $is_next_record = $this->DataSource->next_record();
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    case "Report":
                        if ($items[$i]->Mode == 2) {
                            $this->TotalSum_COUNT_disease_1->SetValue($items[$i]->TotalSum_COUNT_disease_1);
                            $this->TotalSum_COUNT_disease_1->Attributes->RestoreFromArray($items[$i]->_TotalSum_COUNT_disease_1Attributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->TotalSum_COUNT_disease_1->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Page_Header");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Page_Header");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End Report23 Class @691-FCB6E20C

class clsReport23DataSource extends clsDBregistry_db {  //Report23DataSource Class @691-18C43CC6

//DataSource Variables @691-DFA2ABEB
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $TotalSum_COUNT_disease_1;
//End DataSource Variables

//DataSourceClass_Initialize Event @691-90739C11
    function clsReport23DataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report Report23";
        $this->Initialize();
        $this->TotalSum_COUNT_disease_1 = new clsField("TotalSum_COUNT_disease_1", ccsInteger, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @691-9E1383D1
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            "");
    }
//End SetOrder Method

//Prepare Method @691-75B0B4EC
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "sess_Facilities", ccsInteger, "", "", $this->Parameters["sess_Facilities"], 0, false);
        $this->wp->AddParameter("2", "urls_PregRegDate", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDate"], CCFormatDate(CCParseDate("1903-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
        $this->wp->AddParameter("3", "urls_PregRegDateTo", ccsDate, array("ShortDate"), array("yyyy", "-", "mm", "-", "dd", " ", "HH", ":", "nn", ":", "ss"), $this->Parameters["urls_PregRegDateTo"], CCFormatDate(CCParseDate("2999-01-01",array("yyyy","-","mm","-","dd")),array("ShortDate")), false);
    }
//End Prepare Method

//Open Method @691-4451F96B
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT COUNT(disease) FROM\n" .
        "(\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, complications.ICD10ID) AS disease\n" .
        "FROM ((((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID) LEFT JOIN procedures ON\n" .
        "procedures.DeliveryID = delivery.DeliveryID\n" .
        "\n" .
        "WHERE \n" .
        "complications.ICD10ID = 'O.85.'\n" .
        "AND procedures.ProcedureTypeID = 24\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY complications.ICD10ID\n" .
        "\n" .
        "UNION\n" .
        "\n" .
        "SELECT CONCAT(patient.PatientID, pcomplications.ICD10ID) AS disease\n" .
        "FROM ((((pregnancy INNER JOIN patient ON\n" .
        "pregnancy.PatientID = patient.PatientID) INNER JOIN delivery ON\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN complications ON\n" .
        "complications.DeliveryID = delivery.DeliveryID) LEFT JOIN pcomplications ON\n" .
        "pcomplications.DeliveryID = delivery.DeliveryID) LEFT JOIN procedures ON\n" .
        "procedures.DeliveryID = delivery.DeliveryID \n" .
        "\n" .
        "WHERE \n" .
        "pcomplications.ICD10ID = 'O.85.'\n" .
        "AND procedures.ProcedureTypeID = 24\n" .
        "AND delivery.DataDelivery >= '" . $this->SQLValue($this->wp->GetDBValue("2"), ccsDate) . "'\n" .
        "AND delivery.DataDelivery <= '" . $this->SQLValue($this->wp->GetDBValue("3"), ccsDate) . "'\n" .
        "AND delivery.FacilityID IN (" . $this->SQLValue($this->wp->GetDBValue("1"), ccsInteger) . ")\n" .
        "-- GROUP BY pcomplications.ICD10ID\n" .
        "\n" .
        "\n" .
        "\n" .
        ") AS result\n" .
        "GROUP BY disease ";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, $this->Order));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @691-14459362
    function SetValues()
    {
        $this->TotalSum_COUNT_disease_1->SetDBValue(trim($this->f("COUNT(disease)")));
    }
//End SetValues Method

} //End Report23DataSource Class @691-FCB6E20C

//Initialize Page @1-DFC1AB8E
// Variables
$FileName = "";
$Redirect = "";
$Tpl = "";
$TemplateFileName = "";
$BlockToParse = "";
$ComponentName = "";
$Attributes = "";

// Events;
$CCSEvents = "";
$CCSEventResult = "";

$FileName = FileName;
$Redirect = "";
$TemplateFileName = "report_f21_2211_disease_facilities.html";
$BlockToParse = "main";
$TemplateEncoding = "UTF-8";
$ContentType = "text/html";
$PathToRoot = "./";
$Charset = $Charset ? $Charset : "utf-8";
//End Initialize Page

//Authenticate User @1-13756179
CCSecurityRedirect("3", "noaccess.php");
//End Authenticate User

//Include events file @1-1513D15B
include_once("./report_f21_2211_disease_facilities_events.php");
//End Include events file

//Before Initialize @1-E870CEBC
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeInitialize", $MainPage);
//End Before Initialize

//Initialize Objects @1-CB2EF406
$DBregistry_db = new clsDBregistry_db();
$MainPage->Connections["registry_db"] = & $DBregistry_db;
$Attributes = new clsAttributes("page:");
$MainPage->Attributes = & $Attributes;

// Controls
$topmenu = new clstopmenu("", "topmenu", $MainPage);
$topmenu->Initialize();
$pregnancySearch = new clsRecordpregnancySearch("", $MainPage);
$Report_Print = new clsControl(ccsLink, "Report_Print", "Report_Print", ccsText, "", CCGetRequestParam("Report_Print", ccsGet, NULL), $MainPage);
$Report_Print->Page = "report_f21_2211_disease_facilities.php";
$Report1 = new clsReportReport1("", $MainPage);
$Report2 = new clsReportReport2("", $MainPage);
$Report3 = new clsReportReport3("", $MainPage);
$Report4 = new clsReportReport4("", $MainPage);
$Report5 = new clsReportReport5("", $MainPage);
$Report6 = new clsReportReport6("", $MainPage);
$Report7 = new clsReportReport7("", $MainPage);
$Report8 = new clsReportReport8("", $MainPage);
$Report9 = new clsReportReport9("", $MainPage);
$Report10 = new clsReportReport10("", $MainPage);
$Report11 = new clsReportReport11("", $MainPage);
$Report12 = new clsReportReport12("", $MainPage);
$Report13 = new clsReportReport13("", $MainPage);
$Report14 = new clsReportReport14("", $MainPage);
$Report15 = new clsReportReport15("", $MainPage);
$Report16 = new clsReportReport16("", $MainPage);
$Report17 = new clsReportReport17("", $MainPage);
$Report18 = new clsReportReport18("", $MainPage);
$Report19 = new clsReportReport19("", $MainPage);
$Report20 = new clsReportReport20("", $MainPage);
$Report21 = new clsReportReport21("", $MainPage);
$Report22 = new clsReportReport22("", $MainPage);
$Report23 = new clsReportReport23("", $MainPage);
$MainPage->topmenu = & $topmenu;
$MainPage->pregnancySearch = & $pregnancySearch;
$MainPage->Report_Print = & $Report_Print;
$MainPage->Report1 = & $Report1;
$MainPage->Report2 = & $Report2;
$MainPage->Report3 = & $Report3;
$MainPage->Report4 = & $Report4;
$MainPage->Report5 = & $Report5;
$MainPage->Report6 = & $Report6;
$MainPage->Report7 = & $Report7;
$MainPage->Report8 = & $Report8;
$MainPage->Report9 = & $Report9;
$MainPage->Report10 = & $Report10;
$MainPage->Report11 = & $Report11;
$MainPage->Report12 = & $Report12;
$MainPage->Report13 = & $Report13;
$MainPage->Report14 = & $Report14;
$MainPage->Report15 = & $Report15;
$MainPage->Report16 = & $Report16;
$MainPage->Report17 = & $Report17;
$MainPage->Report18 = & $Report18;
$MainPage->Report19 = & $Report19;
$MainPage->Report20 = & $Report20;
$MainPage->Report21 = & $Report21;
$MainPage->Report22 = & $Report22;
$MainPage->Report23 = & $Report23;
$Report_Print->Parameters = CCGetQueryString("QueryString", array("ccsForm"));
$Report_Print->Parameters = CCAddParam($Report_Print->Parameters, "ViewMode", "Print");
$Report1->Initialize();
$Report2->Initialize();
$Report3->Initialize();
$Report4->Initialize();
$Report5->Initialize();
$Report6->Initialize();
$Report7->Initialize();
$Report8->Initialize();
$Report9->Initialize();
$Report10->Initialize();
$Report11->Initialize();
$Report12->Initialize();
$Report13->Initialize();
$Report14->Initialize();
$Report15->Initialize();
$Report16->Initialize();
$Report17->Initialize();
$Report18->Initialize();
$Report19->Initialize();
$Report20->Initialize();
$Report21->Initialize();
$Report22->Initialize();
$Report23->Initialize();

BindEvents();

$CCSEventResult = CCGetEvent($CCSEvents, "AfterInitialize", $MainPage);

if ($Charset) {
    header("Content-Type: " . $ContentType . "; charset=" . $Charset);
} else {
    header("Content-Type: " . $ContentType);
}
//End Initialize Objects

//Initialize HTML Template @1-A06E9207
$CCSEventResult = CCGetEvent($CCSEvents, "OnInitializeView", $MainPage);
$Tpl = new clsTemplate($FileEncoding, $TemplateEncoding);
$Tpl->LoadTemplate(PathToCurrentPage . $TemplateFileName, $BlockToParse, "UTF-8", "replace");
$Tpl->block_path = "/$BlockToParse";
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeShow", $MainPage);
$Attributes->SetValue("pathToRoot", "");
$Attributes->Show();
//End Initialize HTML Template

//Execute Components @1-16012FCF
$topmenu->Operations();
$pregnancySearch->Operation();
//End Execute Components

//Go to destination page @1-FA397887
if($Redirect)
{
    $CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
    $DBregistry_db->close();
    header("Location: " . $Redirect);
    $topmenu->Class_Terminate();
    unset($topmenu);
    unset($pregnancySearch);
    unset($Report1);
    unset($Report2);
    unset($Report3);
    unset($Report4);
    unset($Report5);
    unset($Report6);
    unset($Report7);
    unset($Report8);
    unset($Report9);
    unset($Report10);
    unset($Report11);
    unset($Report12);
    unset($Report13);
    unset($Report14);
    unset($Report15);
    unset($Report16);
    unset($Report17);
    unset($Report18);
    unset($Report19);
    unset($Report20);
    unset($Report21);
    unset($Report22);
    unset($Report23);
    unset($Tpl);
    exit;
}
//End Go to destination page

//Show Page @1-82509C16
$topmenu->Show();
$pregnancySearch->Show();
$Report1->Show();
$Report2->Show();
$Report3->Show();
$Report4->Show();
$Report5->Show();
$Report6->Show();
$Report7->Show();
$Report8->Show();
$Report9->Show();
$Report10->Show();
$Report11->Show();
$Report12->Show();
$Report13->Show();
$Report14->Show();
$Report15->Show();
$Report16->Show();
$Report17->Show();
$Report18->Show();
$Report19->Show();
$Report20->Show();
$Report21->Show();
$Report22->Show();
$Report23->Show();
$Report_Print->Show();
$Tpl->block_path = "";
$Tpl->Parse($BlockToParse, false);
if (!isset($main_block)) $main_block = $Tpl->GetVar($BlockToParse);
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeOutput", $MainPage);
if ($CCSEventResult) echo $main_block;
//End Show Page

//Unload Page @1-E8137336
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
$DBregistry_db->close();
$topmenu->Class_Terminate();
unset($topmenu);
unset($pregnancySearch);
unset($Report1);
unset($Report2);
unset($Report3);
unset($Report4);
unset($Report5);
unset($Report6);
unset($Report7);
unset($Report8);
unset($Report9);
unset($Report10);
unset($Report11);
unset($Report12);
unset($Report13);
unset($Report14);
unset($Report15);
unset($Report16);
unset($Report17);
unset($Report18);
unset($Report19);
unset($Report20);
unset($Report21);
unset($Report22);
unset($Report23);
unset($Tpl);
//End Unload Page


?>
