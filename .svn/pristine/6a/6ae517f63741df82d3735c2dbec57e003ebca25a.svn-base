<?php
//Include Common Files @1-BD13F8DF
define("RelativePath", ".");
define("PathToCurrentPage", "/");
define("FileName", "report_statistical_delivery_facilities.php");
include_once(RelativePath . "/Common.php");
include_once(RelativePath . "/Template.php");
include_once(RelativePath . "/Sorter.php");
include_once(RelativePath . "/Navigator.php");
//End Include Common Files

//Include Page implementation @2-203FAEA1
include_once(RelativePath . "/topmenu.php");
//End Include Page implementation

//delivery_facilities_pregn ReportGroup class @3-F3C2D7E4
class clsReportGroupdelivery_facilities_pregn {
    public $GroupType;
    public $mode; //1 - open, 2 - close
    public $Report_TotalRecords, $_Report_TotalRecordsAttributes;
    public $FacilityName, $_FacilityNameAttributes;
    public $Report_Row_Number, $_Report_Row_NumberAttributes;
    public $PregnancyOutcome1ID, $_PregnancyOutcome1IDAttributes;
    public $Partogram, $_PartogramAttributes;
    public $PartnerDelivery, $_PartnerDeliveryAttributes;
    public $DataDelivery, $_DataDeliveryAttributes;
    public $FamilyName, $_FamilyNameAttributes;
    public $DeliveryMethodName, $_DeliveryMethodNameAttributes;
    public $DeliveryTypeName, $_DeliveryTypeNameAttributes;
    public $GivenName, $_GivenNameAttributes;
    public $PregnancyOutcome2ID, $_PregnancyOutcome2IDAttributes;
    public $PregnancyOutcome3ID, $_PregnancyOutcome3IDAttributes;
    public $PregnancyOutcome4ID, $_PregnancyOutcome4IDAttributes;
    public $Count_Partogram, $_Count_PartogramAttributes;
    public $Count_PartnerDelivery, $_Count_PartnerDeliveryAttributes;
    public $TotalCount_Partogram, $_TotalCount_PartogramAttributes;
    public $TotalCount_PartnerDelivery, $_TotalCount_PartnerDeliveryAttributes;
    public $Report_CurrentDate, $_Report_CurrentDateAttributes;
    public $Attributes;
    public $ReportTotalIndex = 0;
    public $PageTotalIndex;
    public $PageNumber;
    public $RowNumber;
    public $Parent;
    public $FacilityNameTotalIndex;

    function clsReportGroupdelivery_facilities_pregn(& $parent) {
        $this->Parent = & $parent;
        $this->Attributes = $this->Parent->Attributes->GetAsArray();
    }
    function SetControls($PrevGroup = "") {
        $this->FacilityName = $this->Parent->FacilityName->Value;
        $this->PregnancyOutcome1ID = $this->Parent->PregnancyOutcome1ID->Value;
        $this->Partogram = $this->Parent->Partogram->Value;
        $this->PartnerDelivery = $this->Parent->PartnerDelivery->Value;
        $this->DataDelivery = $this->Parent->DataDelivery->Value;
        $this->FamilyName = $this->Parent->FamilyName->Value;
        $this->DeliveryMethodName = $this->Parent->DeliveryMethodName->Value;
        $this->DeliveryTypeName = $this->Parent->DeliveryTypeName->Value;
        $this->GivenName = $this->Parent->GivenName->Value;
        $this->PregnancyOutcome2ID = $this->Parent->PregnancyOutcome2ID->Value;
        $this->PregnancyOutcome3ID = $this->Parent->PregnancyOutcome3ID->Value;
        $this->PregnancyOutcome4ID = $this->Parent->PregnancyOutcome4ID->Value;
    }

    function SetTotalControls($mode = "", $PrevGroup = "") {
        $this->Report_TotalRecords = $this->Parent->Report_TotalRecords->GetTotalValue($mode);
        $this->Report_Row_Number = $this->Parent->Report_Row_Number->GetTotalValue($mode);
        $this->Count_Partogram = $this->Parent->Count_Partogram->GetTotalValue($mode);
        $this->Count_PartnerDelivery = $this->Parent->Count_PartnerDelivery->GetTotalValue($mode);
        $this->TotalCount_Partogram = $this->Parent->TotalCount_Partogram->GetTotalValue($mode);
        $this->TotalCount_PartnerDelivery = $this->Parent->TotalCount_PartnerDelivery->GetTotalValue($mode);
        $this->_Report_TotalRecordsAttributes = $this->Parent->Report_TotalRecords->Attributes->GetAsArray();
        $this->_Sorter_PregnancyOutcome1IDAttributes = $this->Parent->Sorter_PregnancyOutcome1ID->Attributes->GetAsArray();
        $this->_Sorter_PregnancyOutcome2IDAttributes = $this->Parent->Sorter_PregnancyOutcome2ID->Attributes->GetAsArray();
        $this->_Sorter_PregnancyOutcome3IDAttributes = $this->Parent->Sorter_PregnancyOutcome3ID->Attributes->GetAsArray();
        $this->_Sorter_PartogramAttributes = $this->Parent->Sorter_Partogram->Attributes->GetAsArray();
        $this->_Sorter_PartnerDeliveryAttributes = $this->Parent->Sorter_PartnerDelivery->Attributes->GetAsArray();
        $this->_Sorter_DataDeliveryAttributes = $this->Parent->Sorter_DataDelivery->Attributes->GetAsArray();
        $this->_Sorter_DeliveryMethodNameAttributes = $this->Parent->Sorter_DeliveryMethodName->Attributes->GetAsArray();
        $this->_Sorter_DeliveryTypeNameAttributes = $this->Parent->Sorter_DeliveryTypeName->Attributes->GetAsArray();
        $this->_FacilityNameAttributes = $this->Parent->FacilityName->Attributes->GetAsArray();
        $this->_Report_Row_NumberAttributes = $this->Parent->Report_Row_Number->Attributes->GetAsArray();
        $this->_PregnancyOutcome1IDAttributes = $this->Parent->PregnancyOutcome1ID->Attributes->GetAsArray();
        $this->_PartogramAttributes = $this->Parent->Partogram->Attributes->GetAsArray();
        $this->_PartnerDeliveryAttributes = $this->Parent->PartnerDelivery->Attributes->GetAsArray();
        $this->_DataDeliveryAttributes = $this->Parent->DataDelivery->Attributes->GetAsArray();
        $this->_FamilyNameAttributes = $this->Parent->FamilyName->Attributes->GetAsArray();
        $this->_DeliveryMethodNameAttributes = $this->Parent->DeliveryMethodName->Attributes->GetAsArray();
        $this->_DeliveryTypeNameAttributes = $this->Parent->DeliveryTypeName->Attributes->GetAsArray();
        $this->_GivenNameAttributes = $this->Parent->GivenName->Attributes->GetAsArray();
        $this->_PregnancyOutcome2IDAttributes = $this->Parent->PregnancyOutcome2ID->Attributes->GetAsArray();
        $this->_PregnancyOutcome3IDAttributes = $this->Parent->PregnancyOutcome3ID->Attributes->GetAsArray();
        $this->_PregnancyOutcome4IDAttributes = $this->Parent->PregnancyOutcome4ID->Attributes->GetAsArray();
        $this->_Count_PartogramAttributes = $this->Parent->Count_Partogram->Attributes->GetAsArray();
        $this->_Count_PartnerDeliveryAttributes = $this->Parent->Count_PartnerDelivery->Attributes->GetAsArray();
        $this->_TotalCount_PartogramAttributes = $this->Parent->TotalCount_Partogram->Attributes->GetAsArray();
        $this->_TotalCount_PartnerDeliveryAttributes = $this->Parent->TotalCount_PartnerDelivery->Attributes->GetAsArray();
        $this->_Report_CurrentDateAttributes = $this->Parent->Report_CurrentDate->Attributes->GetAsArray();
        $this->_NavigatorAttributes = $this->Parent->Navigator->Attributes->GetAsArray();
    }
    function SyncWithHeader(& $Header) {
        $Header->Report_TotalRecords = $this->Report_TotalRecords;
        $Header->_Report_TotalRecordsAttributes = $this->_Report_TotalRecordsAttributes;
        $Header->Report_Row_Number = $this->Report_Row_Number;
        $Header->_Report_Row_NumberAttributes = $this->_Report_Row_NumberAttributes;
        $Header->Count_Partogram = $this->Count_Partogram;
        $Header->_Count_PartogramAttributes = $this->_Count_PartogramAttributes;
        $Header->Count_PartnerDelivery = $this->Count_PartnerDelivery;
        $Header->_Count_PartnerDeliveryAttributes = $this->_Count_PartnerDeliveryAttributes;
        $Header->TotalCount_Partogram = $this->TotalCount_Partogram;
        $Header->_TotalCount_PartogramAttributes = $this->_TotalCount_PartogramAttributes;
        $Header->TotalCount_PartnerDelivery = $this->TotalCount_PartnerDelivery;
        $Header->_TotalCount_PartnerDeliveryAttributes = $this->_TotalCount_PartnerDeliveryAttributes;
        $this->FacilityName = $Header->FacilityName;
        $Header->_FacilityNameAttributes = $this->_FacilityNameAttributes;
        $this->Parent->FacilityName->Value = $Header->FacilityName;
        $this->Parent->FacilityName->Attributes->RestoreFromArray($Header->_FacilityNameAttributes);
        $this->PregnancyOutcome1ID = $Header->PregnancyOutcome1ID;
        $Header->_PregnancyOutcome1IDAttributes = $this->_PregnancyOutcome1IDAttributes;
        $this->Parent->PregnancyOutcome1ID->Value = $Header->PregnancyOutcome1ID;
        $this->Parent->PregnancyOutcome1ID->Attributes->RestoreFromArray($Header->_PregnancyOutcome1IDAttributes);
        $this->Partogram = $Header->Partogram;
        $Header->_PartogramAttributes = $this->_PartogramAttributes;
        $this->Parent->Partogram->Value = $Header->Partogram;
        $this->Parent->Partogram->Attributes->RestoreFromArray($Header->_PartogramAttributes);
        $this->PartnerDelivery = $Header->PartnerDelivery;
        $Header->_PartnerDeliveryAttributes = $this->_PartnerDeliveryAttributes;
        $this->Parent->PartnerDelivery->Value = $Header->PartnerDelivery;
        $this->Parent->PartnerDelivery->Attributes->RestoreFromArray($Header->_PartnerDeliveryAttributes);
        $this->DataDelivery = $Header->DataDelivery;
        $Header->_DataDeliveryAttributes = $this->_DataDeliveryAttributes;
        $this->Parent->DataDelivery->Value = $Header->DataDelivery;
        $this->Parent->DataDelivery->Attributes->RestoreFromArray($Header->_DataDeliveryAttributes);
        $this->FamilyName = $Header->FamilyName;
        $Header->_FamilyNameAttributes = $this->_FamilyNameAttributes;
        $this->Parent->FamilyName->Value = $Header->FamilyName;
        $this->Parent->FamilyName->Attributes->RestoreFromArray($Header->_FamilyNameAttributes);
        $this->DeliveryMethodName = $Header->DeliveryMethodName;
        $Header->_DeliveryMethodNameAttributes = $this->_DeliveryMethodNameAttributes;
        $this->Parent->DeliveryMethodName->Value = $Header->DeliveryMethodName;
        $this->Parent->DeliveryMethodName->Attributes->RestoreFromArray($Header->_DeliveryMethodNameAttributes);
        $this->DeliveryTypeName = $Header->DeliveryTypeName;
        $Header->_DeliveryTypeNameAttributes = $this->_DeliveryTypeNameAttributes;
        $this->Parent->DeliveryTypeName->Value = $Header->DeliveryTypeName;
        $this->Parent->DeliveryTypeName->Attributes->RestoreFromArray($Header->_DeliveryTypeNameAttributes);
        $this->GivenName = $Header->GivenName;
        $Header->_GivenNameAttributes = $this->_GivenNameAttributes;
        $this->Parent->GivenName->Value = $Header->GivenName;
        $this->Parent->GivenName->Attributes->RestoreFromArray($Header->_GivenNameAttributes);
        $this->PregnancyOutcome2ID = $Header->PregnancyOutcome2ID;
        $Header->_PregnancyOutcome2IDAttributes = $this->_PregnancyOutcome2IDAttributes;
        $this->Parent->PregnancyOutcome2ID->Value = $Header->PregnancyOutcome2ID;
        $this->Parent->PregnancyOutcome2ID->Attributes->RestoreFromArray($Header->_PregnancyOutcome2IDAttributes);
        $this->PregnancyOutcome3ID = $Header->PregnancyOutcome3ID;
        $Header->_PregnancyOutcome3IDAttributes = $this->_PregnancyOutcome3IDAttributes;
        $this->Parent->PregnancyOutcome3ID->Value = $Header->PregnancyOutcome3ID;
        $this->Parent->PregnancyOutcome3ID->Attributes->RestoreFromArray($Header->_PregnancyOutcome3IDAttributes);
        $this->PregnancyOutcome4ID = $Header->PregnancyOutcome4ID;
        $Header->_PregnancyOutcome4IDAttributes = $this->_PregnancyOutcome4IDAttributes;
        $this->Parent->PregnancyOutcome4ID->Value = $Header->PregnancyOutcome4ID;
        $this->Parent->PregnancyOutcome4ID->Attributes->RestoreFromArray($Header->_PregnancyOutcome4IDAttributes);
    }
    function ChangeTotalControls() {
        $this->Report_TotalRecords = $this->Parent->Report_TotalRecords->GetValue();
        $this->Report_Row_Number = $this->Parent->Report_Row_Number->GetValue();
        $this->Count_Partogram = $this->Parent->Count_Partogram->GetValue();
        $this->Count_PartnerDelivery = $this->Parent->Count_PartnerDelivery->GetValue();
        $this->TotalCount_Partogram = $this->Parent->TotalCount_Partogram->GetValue();
        $this->TotalCount_PartnerDelivery = $this->Parent->TotalCount_PartnerDelivery->GetValue();
    }
}
//End delivery_facilities_pregn ReportGroup class

//delivery_facilities_pregn GroupsCollection class @3-4B7C3ADF
class clsGroupsCollectiondelivery_facilities_pregn {
    public $Groups;
    public $mPageCurrentHeaderIndex;
    public $mFacilityNameCurrentHeaderIndex;
    public $PageSize;
    public $TotalPages = 0;
    public $TotalRows = 0;
    public $CurrentPageSize = 0;
    public $Pages;
    public $Parent;
    public $LastDetailIndex;

    function clsGroupsCollectiondelivery_facilities_pregn(& $parent) {
        $this->Parent = & $parent;
        $this->Groups = array();
        $this->Pages  = array();
        $this->mFacilityNameCurrentHeaderIndex = 1;
        $this->mReportTotalIndex = 0;
        $this->mPageTotalIndex = 1;
    }

    function & InitGroup() {
        $group = new clsReportGroupdelivery_facilities_pregn($this->Parent);
        $group->RowNumber = $this->TotalRows + 1;
        $group->PageNumber = $this->TotalPages;
        $group->PageTotalIndex = $this->mPageCurrentHeaderIndex;
        $group->FacilityNameTotalIndex = $this->mFacilityNameCurrentHeaderIndex;
        return $group;
    }

    function RestoreValues() {
        $this->Parent->Report_TotalRecords->Value = $this->Parent->Report_TotalRecords->initialValue;
        $this->Parent->FacilityName->Value = $this->Parent->FacilityName->initialValue;
        $this->Parent->Report_Row_Number->Value = $this->Parent->Report_Row_Number->initialValue;
        $this->Parent->PregnancyOutcome1ID->Value = $this->Parent->PregnancyOutcome1ID->initialValue;
        $this->Parent->Partogram->Value = $this->Parent->Partogram->initialValue;
        $this->Parent->PartnerDelivery->Value = $this->Parent->PartnerDelivery->initialValue;
        $this->Parent->DataDelivery->Value = $this->Parent->DataDelivery->initialValue;
        $this->Parent->FamilyName->Value = $this->Parent->FamilyName->initialValue;
        $this->Parent->DeliveryMethodName->Value = $this->Parent->DeliveryMethodName->initialValue;
        $this->Parent->DeliveryTypeName->Value = $this->Parent->DeliveryTypeName->initialValue;
        $this->Parent->GivenName->Value = $this->Parent->GivenName->initialValue;
        $this->Parent->PregnancyOutcome2ID->Value = $this->Parent->PregnancyOutcome2ID->initialValue;
        $this->Parent->PregnancyOutcome3ID->Value = $this->Parent->PregnancyOutcome3ID->initialValue;
        $this->Parent->PregnancyOutcome4ID->Value = $this->Parent->PregnancyOutcome4ID->initialValue;
        $this->Parent->Count_Partogram->Value = $this->Parent->Count_Partogram->initialValue;
        $this->Parent->Count_PartnerDelivery->Value = $this->Parent->Count_PartnerDelivery->initialValue;
        $this->Parent->TotalCount_Partogram->Value = $this->Parent->TotalCount_Partogram->initialValue;
        $this->Parent->TotalCount_PartnerDelivery->Value = $this->Parent->TotalCount_PartnerDelivery->initialValue;
    }

    function OpenPage() {
        $this->TotalPages++;
        $Group = & $this->InitGroup();
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnInitialize", $this->Parent->Page_Header);
        if ($this->Parent->Page_Header->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Page_Header->Height;
        $Group->SetTotalControls("GetNextValue");
        $this->Parent->Page_Header->CCSEventResult = CCGetEvent($this->Parent->Page_Header->CCSEvents, "OnCalculate", $this->Parent->Page_Header);
        $Group->SetControls();
        $Group->Mode = 1;
        $Group->GroupType = "Page";
        $Group->PageTotalIndex = count($this->Groups);
        $this->mPageCurrentHeaderIndex = count($this->Groups);
        $this->Groups[] =  & $Group;
        $this->Pages[] =  count($this->Groups) == 2 ? 0 : count($this->Groups) - 1;
    }

    function OpenGroup($groupName) {
        $Group = "";
        $OpenFlag = false;
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Header->CCSEventResult = CCGetEvent($this->Parent->Report_Header->CCSEvents, "OnInitialize", $this->Parent->Report_Header);
            if ($this->Parent->Report_Header->Visible) 
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Header->Height;
                $Group->SetTotalControls("GetNextValue");
            $this->Parent->Report_Header->CCSEventResult = CCGetEvent($this->Parent->Report_Header->CCSEvents, "OnCalculate", $this->Parent->Report_Header);
            $Group->SetControls();
            $Group->Mode = 1;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->OpenPage();
        }
        if ($groupName == "FacilityName") {
            $GroupFacilityName = & $this->InitGroup(true);
            $this->Parent->FacilityName_Header->CCSEventResult = CCGetEvent($this->Parent->FacilityName_Header->CCSEvents, "OnInitialize", $this->Parent->FacilityName_Header);
            if ($this->Parent->Page_Footer->Visible) 
                $OverSize = $this->Parent->FacilityName_Header->Height + $this->Parent->Page_Footer->Height;
            else
                $OverSize = $this->Parent->FacilityName_Header->Height;
            if (($this->PageSize > 0) and $this->Parent->FacilityName_Header->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            if ($this->Parent->FacilityName_Header->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->FacilityName_Header->Height;
                $GroupFacilityName->SetTotalControls("GetNextValue");
            $this->Parent->FacilityName_Header->CCSEventResult = CCGetEvent($this->Parent->FacilityName_Header->CCSEvents, "OnCalculate", $this->Parent->FacilityName_Header);
            $GroupFacilityName->SetControls();
            $GroupFacilityName->Mode = 1;
            $GroupFacilityName->GroupType = "FacilityName";
            $this->mFacilityNameCurrentHeaderIndex = count($this->Groups);
            $this->Groups[] = & $GroupFacilityName;
            $this->Parent->Count_Partogram->Reset();
            $this->Parent->Count_PartnerDelivery->Reset();
        }
    }

    function ClosePage() {
        $Group = & $this->InitGroup();
        $this->Parent->Page_Footer->CCSEventResult = CCGetEvent($this->Parent->Page_Footer->CCSEvents, "OnInitialize", $this->Parent->Page_Footer);
        $Group->SetTotalControls("GetPrevValue");
        $Group->SyncWithHeader($this->Groups[$this->mPageCurrentHeaderIndex]);
        $this->Parent->Page_Footer->CCSEventResult = CCGetEvent($this->Parent->Page_Footer->CCSEvents, "OnCalculate", $this->Parent->Page_Footer);
        $Group->SetControls();
        $this->RestoreValues();
        $this->CurrentPageSize = 0;
        $Group->Mode = 2;
        $Group->GroupType = "Page";
        $this->Groups[] = & $Group;
    }

    function CloseGroup($groupName)
    {
        $Group = "";
        if ($groupName == "Report") {
            $Group = & $this->InitGroup(true);
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnInitialize", $this->Parent->Report_Footer);
            if ($this->Parent->Page_Footer->Visible) 
                $OverSize = $this->Parent->Report_Footer->Height + $this->Parent->Page_Footer->Height;
            else
                $OverSize = $this->Parent->Report_Footer->Height;
            if (($this->PageSize > 0) and $this->Parent->Report_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
                $this->ClosePage();
                $this->OpenPage();
            }
            $Group->SetTotalControls("GetPrevValue");
            $Group->SyncWithHeader($this->Groups[0]);
            if ($this->Parent->Report_Footer->Visible)
                $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Report_Footer->Height;
            $this->Parent->Report_Footer->CCSEventResult = CCGetEvent($this->Parent->Report_Footer->CCSEvents, "OnCalculate", $this->Parent->Report_Footer);
            $Group->SetControls();
            $this->RestoreValues();
            $Group->Mode = 2;
            $Group->GroupType = "Report";
            $this->Groups[] = & $Group;
            $this->ClosePage();
            return;
        }
        $GroupFacilityName = & $this->InitGroup(true);
        $this->Parent->FacilityName_Footer->CCSEventResult = CCGetEvent($this->Parent->FacilityName_Footer->CCSEvents, "OnInitialize", $this->Parent->FacilityName_Footer);
        if ($this->Parent->Page_Footer->Visible) 
            $OverSize = $this->Parent->FacilityName_Footer->Height + $this->Parent->Page_Footer->Height;
        else
            $OverSize = $this->Parent->FacilityName_Footer->Height;
        if (($this->PageSize > 0) and $this->Parent->FacilityName_Footer->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
            $this->ClosePage();
            $this->OpenPage();
        }
        $GroupFacilityName->SetTotalControls("GetPrevValue");
        $GroupFacilityName->SyncWithHeader($this->Groups[$this->mFacilityNameCurrentHeaderIndex]);
        if ($this->Parent->FacilityName_Footer->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->FacilityName_Footer->Height;
        $this->Parent->FacilityName_Footer->CCSEventResult = CCGetEvent($this->Parent->FacilityName_Footer->CCSEvents, "OnCalculate", $this->Parent->FacilityName_Footer);
        $GroupFacilityName->SetControls();
        $this->Parent->Count_Partogram->Reset();
        $this->Parent->Count_PartnerDelivery->Reset();
        $this->RestoreValues();
        $GroupFacilityName->Mode = 2;
        $GroupFacilityName->GroupType ="FacilityName";
        $this->Groups[] = & $GroupFacilityName;
    }

    function AddItem()
    {
        $Group = & $this->InitGroup(true);
        $this->Parent->Detail->CCSEventResult = CCGetEvent($this->Parent->Detail->CCSEvents, "OnInitialize", $this->Parent->Detail);
        if ($this->Parent->Page_Footer->Visible) 
            $OverSize = $this->Parent->Detail->Height + $this->Parent->Page_Footer->Height;
        else
            $OverSize = $this->Parent->Detail->Height;
        if (($this->PageSize > 0) and $this->Parent->Detail->Visible and ($this->CurrentPageSize + $OverSize > $this->PageSize)) {
            $this->ClosePage();
            $this->OpenPage();
        }
        $this->TotalRows++;
        if ($this->LastDetailIndex)
            $PrevGroup = & $this->Groups[$this->LastDetailIndex];
        else
            $PrevGroup = "";
        $Group->SetTotalControls("", $PrevGroup);
        if ($this->Parent->Detail->Visible)
            $this->CurrentPageSize = $this->CurrentPageSize + $this->Parent->Detail->Height;
        $this->Parent->Detail->CCSEventResult = CCGetEvent($this->Parent->Detail->CCSEvents, "OnCalculate", $this->Parent->Detail);
        $Group->SetControls($PrevGroup);
        $this->LastDetailIndex = count($this->Groups);
        $this->Groups[] = & $Group;
    }
}
//End delivery_facilities_pregn GroupsCollection class

class clsReportdelivery_facilities_pregn { //delivery_facilities_pregn Class @3-5BEBF544

//delivery_facilities_pregn Variables @3-2A43767A

    public $ComponentType = "Report";
    public $PageSize;
    public $ComponentName;
    public $Visible;
    public $Errors;
    public $CCSEvents = array();
    public $CCSEventResult;
    public $RelativePath = "";
    public $ViewMode = "Web";
    public $TemplateBlock;
    public $PageNumber;
    public $RowNumber;
    public $TotalRows;
    public $TotalPages;
    public $ControlsVisible = array();
    public $IsEmpty;
    public $Attributes;
    public $DetailBlock, $Detail;
    public $Report_FooterBlock, $Report_Footer;
    public $Report_HeaderBlock, $Report_Header;
    public $Page_FooterBlock, $Page_Footer;
    public $Page_HeaderBlock, $Page_Header;
    public $FacilityName_HeaderBlock, $FacilityName_Header;
    public $FacilityName_FooterBlock, $FacilityName_Footer;
    public $SorterName, $SorterDirection;

    public $ds;
    public $DataSource;
    public $UseClientPaging = true;

    //Report Controls
    public $StaticControls, $RowControls, $Report_FooterControls, $Report_HeaderControls;
    public $Page_FooterControls, $Page_HeaderControls;
    public $FacilityName_HeaderControls, $FacilityName_FooterControls;
    public $Sorter_PregnancyOutcome1ID;
    public $Sorter_PregnancyOutcome2ID;
    public $Sorter_PregnancyOutcome3ID;
    public $Sorter_Partogram;
    public $Sorter_PartnerDelivery;
    public $Sorter_DataDelivery;
    public $Sorter_DeliveryMethodName;
    public $Sorter_DeliveryTypeName;
//End delivery_facilities_pregn Variables

//Class_Initialize Event @3-505E8963
    function clsReportdelivery_facilities_pregn($RelativePath = "", & $Parent)
    {
        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->ComponentName = "delivery_facilities_pregn";
        $this->Visible = True;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Attributes = new clsAttributes($this->ComponentName . ":");
        $this->Detail = new clsSection($this);
        $MinPageSize = 0;
        $MaxSectionSize = 0;
        $this->Detail->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Detail->Height);
        $this->Report_Footer = new clsSection($this);
        $this->Report_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->Report_Footer->Height);
        $this->Report_Header = new clsSection($this);
        $this->Page_Footer = new clsSection($this);
        $this->Page_Footer->Height = 1;
        $MinPageSize += $this->Page_Footer->Height;
        $this->Page_Header = new clsSection($this);
        $this->Page_Header->Height = 1;
        $MinPageSize += $this->Page_Header->Height;
        $this->FacilityName_Footer = new clsSection($this);
        $this->FacilityName_Footer->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->FacilityName_Footer->Height);
        $this->FacilityName_Header = new clsSection($this);
        $this->FacilityName_Header->Height = 1;
        $MaxSectionSize = max($MaxSectionSize, $this->FacilityName_Header->Height);
        $this->Errors = new clsErrors();
        $this->DataSource = new clsdelivery_facilities_pregnDataSource($this);
        $this->ds = & $this->DataSource;
        $this->ViewMode = CCGetParam("ViewMode", "Web");
        $PageSize = CCGetParam($this->ComponentName . "PageSize", "");
        if(is_numeric($PageSize) && $PageSize > 0) {
            $this->PageSize = $PageSize;
        } else if($this->ViewMode == "Print") {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 50;
             else if ($PageSize == "0")
                $this->PageSize = 0;
             else 
                $this->PageSize = $PageSize;
        } else {
            if (!is_numeric($PageSize) || $PageSize < 0)
                $this->PageSize = 40;
             else if ($PageSize == "0")
                $this->PageSize = 100;
             else 
                $this->PageSize = min(100, $PageSize);
        }
        $MinPageSize += $MaxSectionSize;
        if ($this->PageSize && $MinPageSize && $this->PageSize < $MinPageSize)
            $this->PageSize = $MinPageSize;
        $this->PageNumber = $this->ViewMode == "Print" ? 1 : intval(CCGetParam($this->ComponentName . "Page", 1));
        if ($this->PageNumber <= 0 ) {
            $this->PageNumber = 1;
        }
        $this->SorterName = CCGetParam("delivery_facilities_pregnOrder", "");
        $this->SorterDirection = CCGetParam("delivery_facilities_pregnDir", "");

        $this->Report_TotalRecords = new clsControl(ccsReportLabel, "Report_TotalRecords", "Report_TotalRecords", ccsText, "", 0, $this);
        $this->Report_TotalRecords->TotalFunction = "Count";
        $this->Report_TotalRecords->IsEmptySource = true;
        $this->Sorter_PregnancyOutcome1ID = new clsSorter($this->ComponentName, "Sorter_PregnancyOutcome1ID", $FileName, $this);
        $this->Sorter_PregnancyOutcome2ID = new clsSorter($this->ComponentName, "Sorter_PregnancyOutcome2ID", $FileName, $this);
        $this->Sorter_PregnancyOutcome3ID = new clsSorter($this->ComponentName, "Sorter_PregnancyOutcome3ID", $FileName, $this);
        $this->Sorter_Partogram = new clsSorter($this->ComponentName, "Sorter_Partogram", $FileName, $this);
        $this->Sorter_PartnerDelivery = new clsSorter($this->ComponentName, "Sorter_PartnerDelivery", $FileName, $this);
        $this->Sorter_DataDelivery = new clsSorter($this->ComponentName, "Sorter_DataDelivery", $FileName, $this);
        $this->Sorter_DeliveryMethodName = new clsSorter($this->ComponentName, "Sorter_DeliveryMethodName", $FileName, $this);
        $this->Sorter_DeliveryTypeName = new clsSorter($this->ComponentName, "Sorter_DeliveryTypeName", $FileName, $this);
        $this->FacilityName = new clsControl(ccsReportLabel, "FacilityName", "FacilityName", ccsText, "", "", $this);
        $this->Report_Row_Number = new clsControl(ccsReportLabel, "Report_Row_Number", "Report_Row_Number", ccsInteger, "", 0, $this);
        $this->Report_Row_Number->TotalFunction = "Count";
        $this->Report_Row_Number->IsEmptySource = true;
        $this->PregnancyOutcome1ID = new clsControl(ccsReportLabel, "PregnancyOutcome1ID", "PregnancyOutcome1ID", ccsInteger, "", "", $this);
        $this->Partogram = new clsControl(ccsReportLabel, "Partogram", "Partogram", ccsInteger, "", "", $this);
        $this->PartnerDelivery = new clsControl(ccsReportLabel, "PartnerDelivery", "PartnerDelivery", ccsInteger, "", "", $this);
        $this->DataDelivery = new clsControl(ccsReportLabel, "DataDelivery", "DataDelivery", ccsDate, $DefaultDateFormat, "", $this);
        $this->FamilyName = new clsControl(ccsReportLabel, "FamilyName", "FamilyName", ccsMemo, "", "", $this);
        $this->DeliveryMethodName = new clsControl(ccsReportLabel, "DeliveryMethodName", "DeliveryMethodName", ccsText, "", "", $this);
        $this->DeliveryTypeName = new clsControl(ccsReportLabel, "DeliveryTypeName", "DeliveryTypeName", ccsText, "", "", $this);
        $this->GivenName = new clsControl(ccsReportLabel, "GivenName", "GivenName", ccsMemo, "", "", $this);
        $this->PregnancyOutcome2ID = new clsControl(ccsReportLabel, "PregnancyOutcome2ID", "PregnancyOutcome2ID", ccsInteger, "", "", $this);
        $this->PregnancyOutcome3ID = new clsControl(ccsReportLabel, "PregnancyOutcome3ID", "PregnancyOutcome3ID", ccsInteger, "", "", $this);
        $this->PregnancyOutcome4ID = new clsControl(ccsReportLabel, "PregnancyOutcome4ID", "PregnancyOutcome4ID", ccsMemo, "", "", $this);
        $this->Count_Partogram = new clsControl(ccsReportLabel, "Count_Partogram", "Count_Partogram", ccsInteger, "", 0, $this);
        $this->Count_Partogram->TotalFunction = "Count";
        $this->Count_Partogram->IsEmptySource = true;
        $this->Count_PartnerDelivery = new clsControl(ccsReportLabel, "Count_PartnerDelivery", "Count_PartnerDelivery", ccsInteger, "", 0, $this);
        $this->Count_PartnerDelivery->TotalFunction = "Count";
        $this->Count_PartnerDelivery->IsEmptySource = true;
        $this->NoRecords = new clsPanel("NoRecords", $this);
        $this->TotalCount_Partogram = new clsControl(ccsReportLabel, "TotalCount_Partogram", "TotalCount_Partogram", ccsInteger, "", 0, $this);
        $this->TotalCount_Partogram->TotalFunction = "Count";
        $this->TotalCount_Partogram->IsEmptySource = true;
        $this->TotalCount_PartnerDelivery = new clsControl(ccsReportLabel, "TotalCount_PartnerDelivery", "TotalCount_PartnerDelivery", ccsInteger, "", 0, $this);
        $this->TotalCount_PartnerDelivery->TotalFunction = "Count";
        $this->TotalCount_PartnerDelivery->IsEmptySource = true;
        $this->Report_CurrentDate = new clsControl(ccsReportLabel, "Report_CurrentDate", "Report_CurrentDate", ccsText, array('ShortDate'), "", $this);
        $this->Navigator = new clsNavigator($this->ComponentName, "Navigator", $FileName, 10, tpCentered, $this);
        $this->Navigator->PageSizes = array("1", "5", "10", "25", "50");
    }
//End Class_Initialize Event

//Initialize Method @3-6C59EE65
    function Initialize()
    {
        if(!$this->Visible) return;

        $this->DataSource->PageSize = $this->PageSize;
        $this->DataSource->AbsolutePage = $this->PageNumber;
        $this->DataSource->SetOrder($this->SorterName, $this->SorterDirection);
    }
//End Initialize Method

//CheckErrors Method @3-5593C096
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->Report_TotalRecords->Errors->Count());
        $errors = ($errors || $this->FacilityName->Errors->Count());
        $errors = ($errors || $this->Report_Row_Number->Errors->Count());
        $errors = ($errors || $this->PregnancyOutcome1ID->Errors->Count());
        $errors = ($errors || $this->Partogram->Errors->Count());
        $errors = ($errors || $this->PartnerDelivery->Errors->Count());
        $errors = ($errors || $this->DataDelivery->Errors->Count());
        $errors = ($errors || $this->FamilyName->Errors->Count());
        $errors = ($errors || $this->DeliveryMethodName->Errors->Count());
        $errors = ($errors || $this->DeliveryTypeName->Errors->Count());
        $errors = ($errors || $this->GivenName->Errors->Count());
        $errors = ($errors || $this->PregnancyOutcome2ID->Errors->Count());
        $errors = ($errors || $this->PregnancyOutcome3ID->Errors->Count());
        $errors = ($errors || $this->PregnancyOutcome4ID->Errors->Count());
        $errors = ($errors || $this->Count_Partogram->Errors->Count());
        $errors = ($errors || $this->Count_PartnerDelivery->Errors->Count());
        $errors = ($errors || $this->TotalCount_Partogram->Errors->Count());
        $errors = ($errors || $this->TotalCount_PartnerDelivery->Errors->Count());
        $errors = ($errors || $this->Report_CurrentDate->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        $errors = ($errors || $this->DataSource->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//GetErrors Method @3-BD152EE6
    function GetErrors()
    {
        $errors = "";
        $errors = ComposeStrings($errors, $this->Report_TotalRecords->Errors->ToString());
        $errors = ComposeStrings($errors, $this->FacilityName->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Report_Row_Number->Errors->ToString());
        $errors = ComposeStrings($errors, $this->PregnancyOutcome1ID->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Partogram->Errors->ToString());
        $errors = ComposeStrings($errors, $this->PartnerDelivery->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataDelivery->Errors->ToString());
        $errors = ComposeStrings($errors, $this->FamilyName->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DeliveryMethodName->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DeliveryTypeName->Errors->ToString());
        $errors = ComposeStrings($errors, $this->GivenName->Errors->ToString());
        $errors = ComposeStrings($errors, $this->PregnancyOutcome2ID->Errors->ToString());
        $errors = ComposeStrings($errors, $this->PregnancyOutcome3ID->Errors->ToString());
        $errors = ComposeStrings($errors, $this->PregnancyOutcome4ID->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Count_Partogram->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Count_PartnerDelivery->Errors->ToString());
        $errors = ComposeStrings($errors, $this->TotalCount_Partogram->Errors->ToString());
        $errors = ComposeStrings($errors, $this->TotalCount_PartnerDelivery->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Report_CurrentDate->Errors->ToString());
        $errors = ComposeStrings($errors, $this->Errors->ToString());
        $errors = ComposeStrings($errors, $this->DataSource->Errors->ToString());
        return $errors;
    }
//End GetErrors Method

//Show Method @3-25A4E0D2
    function Show()
    {
        global $Tpl;
        global $CCSLocales;
        if(!$this->Visible) return;

        $ShownRecords = 0;

        $this->DataSource->Parameters["urls_DataDelivery"] = CCGetFromGet("s_DataDelivery", NULL);
        $this->DataSource->Parameters["urls_FacilityName"] = CCGetFromGet("s_FacilityName", NULL);
        $this->DataSource->Parameters["urls_DeliveryMethodName"] = CCGetFromGet("s_DeliveryMethodName", NULL);
        $this->DataSource->Parameters["urls_DeliveryTypeName"] = CCGetFromGet("s_DeliveryTypeName", NULL);
        $this->DataSource->Parameters["urls_PregnancyOutcomeName"] = CCGetFromGet("s_PregnancyOutcomeName", NULL);
        $this->DataSource->Parameters["urls_Partogram"] = CCGetFromGet("s_Partogram", NULL);
        $this->DataSource->Parameters["urls_PartnerDelivery"] = CCGetFromGet("s_PartnerDelivery", NULL);
        $this->DataSource->Parameters["urls_FamilyName"] = CCGetFromGet("s_FamilyName", NULL);
        $this->DataSource->Parameters["urls_GivenName"] = CCGetFromGet("s_GivenName", NULL);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $this->DataSource->Prepare();
        $this->DataSource->Open();

        $FacilityNameKey = "";
        $Groups = new clsGroupsCollectiondelivery_facilities_pregn($this);
        $Groups->PageSize = $this->PageSize > 0 ? $this->PageSize : 0;

        $is_next_record = $this->DataSource->next_record();
        $this->IsEmpty = ! $is_next_record;
        while($is_next_record) {
            $this->DataSource->SetValues();
            $this->FacilityName->SetValue($this->DataSource->FacilityName->GetValue());
            $this->PregnancyOutcome1ID->SetValue($this->DataSource->PregnancyOutcome1ID->GetValue());
            $this->Partogram->SetValue($this->DataSource->Partogram->GetValue());
            $this->PartnerDelivery->SetValue($this->DataSource->PartnerDelivery->GetValue());
            $this->DataDelivery->SetValue($this->DataSource->DataDelivery->GetValue());
            $this->FamilyName->SetValue($this->DataSource->FamilyName->GetValue());
            $this->DeliveryMethodName->SetValue($this->DataSource->DeliveryMethodName->GetValue());
            $this->DeliveryTypeName->SetValue($this->DataSource->DeliveryTypeName->GetValue());
            $this->GivenName->SetValue($this->DataSource->GivenName->GetValue());
            $this->PregnancyOutcome2ID->SetValue($this->DataSource->PregnancyOutcome2ID->GetValue());
            $this->PregnancyOutcome3ID->SetValue($this->DataSource->PregnancyOutcome3ID->GetValue());
            $this->PregnancyOutcome4ID->SetValue($this->DataSource->PregnancyOutcome4ID->GetValue());
            $this->Report_TotalRecords->SetValue(1);
            $this->Report_Row_Number->SetValue(1);
            $this->Count_Partogram->SetValue(1);
            $this->Count_PartnerDelivery->SetValue(1);
            $this->TotalCount_Partogram->SetValue(1);
            $this->TotalCount_PartnerDelivery->SetValue(1);
            if (count($Groups->Groups) == 0) $Groups->OpenGroup("Report");
            if (count($Groups->Groups) == 2 or $FacilityNameKey != $this->DataSource->f("FacilityName")) {
                $Groups->OpenGroup("FacilityName");
            }
            $Groups->AddItem();
            $FacilityNameKey = $this->DataSource->f("FacilityName");
            $is_next_record = $this->DataSource->next_record();
            if (!$is_next_record || $FacilityNameKey != $this->DataSource->f("FacilityName")) {
                $Groups->CloseGroup("FacilityName");
            }
        }
        if (!count($Groups->Groups)) 
            $Groups->OpenGroup("Report");
        else
            $this->NoRecords->Visible = false;
        $Groups->CloseGroup("Report");
        $this->TotalPages = $Groups->TotalPages;
        $this->TotalRows = $Groups->TotalRows;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        if(!$this->Visible) return;

        $this->Attributes->Show();
        $ReportBlock = "Report " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;

        if($this->CheckErrors()) {
            $Tpl->replaceblock("", $this->GetErrors());
            $Tpl->block_path = $ParentPath;
            return;
        } else {
            $items = & $Groups->Groups;
            $i = $Groups->Pages[min($this->PageNumber, $Groups->TotalPages) - 1];
            $this->ControlsVisible["FacilityName"] = $this->FacilityName->Visible;
            $this->ControlsVisible["Report_Row_Number"] = $this->Report_Row_Number->Visible;
            $this->ControlsVisible["PregnancyOutcome1ID"] = $this->PregnancyOutcome1ID->Visible;
            $this->ControlsVisible["Partogram"] = $this->Partogram->Visible;
            $this->ControlsVisible["PartnerDelivery"] = $this->PartnerDelivery->Visible;
            $this->ControlsVisible["DataDelivery"] = $this->DataDelivery->Visible;
            $this->ControlsVisible["FamilyName"] = $this->FamilyName->Visible;
            $this->ControlsVisible["DeliveryMethodName"] = $this->DeliveryMethodName->Visible;
            $this->ControlsVisible["DeliveryTypeName"] = $this->DeliveryTypeName->Visible;
            $this->ControlsVisible["GivenName"] = $this->GivenName->Visible;
            $this->ControlsVisible["PregnancyOutcome2ID"] = $this->PregnancyOutcome2ID->Visible;
            $this->ControlsVisible["PregnancyOutcome3ID"] = $this->PregnancyOutcome3ID->Visible;
            $this->ControlsVisible["PregnancyOutcome4ID"] = $this->PregnancyOutcome4ID->Visible;
            $this->ControlsVisible["Count_Partogram"] = $this->Count_Partogram->Visible;
            $this->ControlsVisible["Count_PartnerDelivery"] = $this->Count_PartnerDelivery->Visible;
            do {
                $this->Attributes->RestoreFromArray($items[$i]->Attributes);
                $this->RowNumber = $items[$i]->RowNumber;
                switch ($items[$i]->GroupType) {
                    Case "":
                        $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Detail";
                        $this->Report_Row_Number->SetValue($items[$i]->Report_Row_Number);
                        $this->Report_Row_Number->Attributes->RestoreFromArray($items[$i]->_Report_Row_NumberAttributes);
                        $this->PregnancyOutcome1ID->SetValue($items[$i]->PregnancyOutcome1ID);
                        $this->PregnancyOutcome1ID->Attributes->RestoreFromArray($items[$i]->_PregnancyOutcome1IDAttributes);
                        $this->Partogram->SetValue($items[$i]->Partogram);
                        $this->Partogram->Attributes->RestoreFromArray($items[$i]->_PartogramAttributes);
                        $this->PartnerDelivery->SetValue($items[$i]->PartnerDelivery);
                        $this->PartnerDelivery->Attributes->RestoreFromArray($items[$i]->_PartnerDeliveryAttributes);
                        $this->DataDelivery->SetValue($items[$i]->DataDelivery);
                        $this->DataDelivery->Attributes->RestoreFromArray($items[$i]->_DataDeliveryAttributes);
                        $this->FamilyName->SetValue($items[$i]->FamilyName);
                        $this->FamilyName->Attributes->RestoreFromArray($items[$i]->_FamilyNameAttributes);
                        $this->DeliveryMethodName->SetValue($items[$i]->DeliveryMethodName);
                        $this->DeliveryMethodName->Attributes->RestoreFromArray($items[$i]->_DeliveryMethodNameAttributes);
                        $this->DeliveryTypeName->SetValue($items[$i]->DeliveryTypeName);
                        $this->DeliveryTypeName->Attributes->RestoreFromArray($items[$i]->_DeliveryTypeNameAttributes);
                        $this->GivenName->SetValue($items[$i]->GivenName);
                        $this->GivenName->Attributes->RestoreFromArray($items[$i]->_GivenNameAttributes);
                        $this->PregnancyOutcome2ID->SetValue($items[$i]->PregnancyOutcome2ID);
                        $this->PregnancyOutcome2ID->Attributes->RestoreFromArray($items[$i]->_PregnancyOutcome2IDAttributes);
                        $this->PregnancyOutcome3ID->SetValue($items[$i]->PregnancyOutcome3ID);
                        $this->PregnancyOutcome3ID->Attributes->RestoreFromArray($items[$i]->_PregnancyOutcome3IDAttributes);
                        $this->PregnancyOutcome4ID->SetValue($items[$i]->PregnancyOutcome4ID);
                        $this->PregnancyOutcome4ID->Attributes->RestoreFromArray($items[$i]->_PregnancyOutcome4IDAttributes);
                        $this->Detail->CCSEventResult = CCGetEvent($this->Detail->CCSEvents, "BeforeShow", $this->Detail);
                        $this->Attributes->Show();
                        $this->Report_Row_Number->Show();
                        $this->PregnancyOutcome1ID->Show();
                        $this->Partogram->Show();
                        $this->PartnerDelivery->Show();
                        $this->DataDelivery->Show();
                        $this->FamilyName->Show();
                        $this->DeliveryMethodName->Show();
                        $this->DeliveryTypeName->Show();
                        $this->GivenName->Show();
                        $this->PregnancyOutcome2ID->Show();
                        $this->PregnancyOutcome3ID->Show();
                        $this->PregnancyOutcome4ID->Show();
                        $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                        if ($this->Detail->Visible)
                            $Tpl->parseto("Section Detail", true, "Section Detail");
                        break;
                    case "Report":
                        if ($items[$i]->Mode == 1) {
                            $this->Report_TotalRecords->SetValue($items[$i]->Report_TotalRecords);
                            $this->Report_TotalRecords->Attributes->RestoreFromArray($items[$i]->_Report_TotalRecordsAttributes);
                            $this->Report_Header->CCSEventResult = CCGetEvent($this->Report_Header->CCSEvents, "BeforeShow", $this->Report_Header);
                            if ($this->Report_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Header";
                                $this->Attributes->Show();
                                $this->Report_TotalRecords->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Header", true, "Section Detail");
                            }
                        }
                        if ($items[$i]->Mode == 2) {
                            $this->TotalCount_Partogram->SetValue($items[$i]->TotalCount_Partogram);
                            $this->TotalCount_Partogram->Attributes->RestoreFromArray($items[$i]->_TotalCount_PartogramAttributes);
                            $this->TotalCount_PartnerDelivery->SetValue($items[$i]->TotalCount_PartnerDelivery);
                            $this->TotalCount_PartnerDelivery->Attributes->RestoreFromArray($items[$i]->_TotalCount_PartnerDeliveryAttributes);
                            $this->Report_Footer->CCSEventResult = CCGetEvent($this->Report_Footer->CCSEvents, "BeforeShow", $this->Report_Footer);
                            if ($this->Report_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Report_Footer";
                                $this->NoRecords->Show();
                                $this->TotalCount_Partogram->Show();
                                $this->TotalCount_PartnerDelivery->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Report_Footer", true, "Section Detail");
                            }
                        }
                        break;
                    case "Page":
                        if ($items[$i]->Mode == 1) {
                            $this->Page_Header->CCSEventResult = CCGetEvent($this->Page_Header->CCSEvents, "BeforeShow", $this->Page_Header);
                            if ($this->Page_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Header";
                                $this->Attributes->Show();
                                $this->Sorter_PregnancyOutcome1ID->Show();
                                $this->Sorter_PregnancyOutcome2ID->Show();
                                $this->Sorter_PregnancyOutcome3ID->Show();
                                $this->Sorter_Partogram->Show();
                                $this->Sorter_PartnerDelivery->Show();
                                $this->Sorter_DataDelivery->Show();
                                $this->Sorter_DeliveryMethodName->Show();
                                $this->Sorter_DeliveryTypeName->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Header", true, "Section Detail");
                            }
                        }
                        if ($items[$i]->Mode == 2 && !$this->UseClientPaging || $items[$i]->Mode == 1 && $this->UseClientPaging) {
                            $this->Report_CurrentDate->SetValue(CCFormatDate(CCGetDateArray(), $this->Report_CurrentDate->Format));
                            $this->Report_CurrentDate->Attributes->RestoreFromArray($items[$i]->_Report_CurrentDateAttributes);
                            $this->Navigator->PageNumber = $items[$i]->PageNumber;
                            $this->Navigator->TotalPages = $Groups->TotalPages;
                            $this->Navigator->Visible = ("Print" != $this->ViewMode);
                            $this->Page_Footer->CCSEventResult = CCGetEvent($this->Page_Footer->CCSEvents, "BeforeShow", $this->Page_Footer);
                            if ($this->Page_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section Page_Footer";
                                $this->Report_CurrentDate->Show();
                                $this->Navigator->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section Page_Footer", true, "Section Detail");
                            }
                        }
                        break;
                    case "FacilityName":
                        if ($items[$i]->Mode == 1) {
                            $this->FacilityName->SetValue($items[$i]->FacilityName);
                            $this->FacilityName->Attributes->RestoreFromArray($items[$i]->_FacilityNameAttributes);
                            $this->FacilityName_Header->CCSEventResult = CCGetEvent($this->FacilityName_Header->CCSEvents, "BeforeShow", $this->FacilityName_Header);
                            if ($this->FacilityName_Header->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section FacilityName_Header";
                                $this->Attributes->Show();
                                $this->FacilityName->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section FacilityName_Header", true, "Section Detail");
                            }
                        }
                        if ($items[$i]->Mode == 2) {
                            $this->Count_Partogram->SetValue($items[$i]->Count_Partogram);
                            $this->Count_Partogram->Attributes->RestoreFromArray($items[$i]->_Count_PartogramAttributes);
                            $this->Count_PartnerDelivery->SetValue($items[$i]->Count_PartnerDelivery);
                            $this->Count_PartnerDelivery->Attributes->RestoreFromArray($items[$i]->_Count_PartnerDeliveryAttributes);
                            $this->FacilityName_Footer->CCSEventResult = CCGetEvent($this->FacilityName_Footer->CCSEvents, "BeforeShow", $this->FacilityName_Footer);
                            if ($this->FacilityName_Footer->Visible) {
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock . "/Section FacilityName_Footer";
                                $this->Count_Partogram->Show();
                                $this->Count_PartnerDelivery->Show();
                                $this->Attributes->Show();
                                $Tpl->block_path = $ParentPath . "/" . $ReportBlock;
                                $Tpl->parseto("Section FacilityName_Footer", true, "Section Detail");
                            }
                        }
                        break;
                }
                $i++;
            } while ($i < count($items) && ($this->ViewMode == "Print" ||  !($i > 1 && $items[$i]->GroupType == 'Page' && $items[$i]->Mode == 1)));
            $Tpl->block_path = $ParentPath;
            $Tpl->parse($ReportBlock);
            $this->DataSource->close();
        }

    }
//End Show Method

} //End delivery_facilities_pregn Class @3-FCB6E20C

class clsdelivery_facilities_pregnDataSource extends clsDBregistry_db {  //delivery_facilities_pregnDataSource Class @3-1CD0C5CE

//DataSource Variables @3-A47D9C07
    public $Parent = "";
    public $CCSEvents = "";
    public $CCSEventResult;
    public $ErrorBlock;
    public $CmdExecution;

    public $wp;


    // Datasource fields
    public $FacilityName;
    public $PregnancyOutcome1ID;
    public $Partogram;
    public $PartnerDelivery;
    public $DataDelivery;
    public $FamilyName;
    public $DeliveryMethodName;
    public $DeliveryTypeName;
    public $GivenName;
    public $PregnancyOutcome2ID;
    public $PregnancyOutcome3ID;
    public $PregnancyOutcome4ID;
//End DataSource Variables

//DataSourceClass_Initialize Event @3-33E762CE
    function clsdelivery_facilities_pregnDataSource(& $Parent)
    {
        $this->Parent = & $Parent;
        $this->ErrorBlock = "Report delivery_facilities_pregn";
        $this->Initialize();
        $this->FacilityName = new clsField("FacilityName", ccsText, "");
        
        $this->PregnancyOutcome1ID = new clsField("PregnancyOutcome1ID", ccsInteger, "");
        
        $this->Partogram = new clsField("Partogram", ccsInteger, "");
        
        $this->PartnerDelivery = new clsField("PartnerDelivery", ccsInteger, "");
        
        $this->DataDelivery = new clsField("DataDelivery", ccsDate, $this->DateFormat);
        
        $this->FamilyName = new clsField("FamilyName", ccsMemo, "");
        
        $this->DeliveryMethodName = new clsField("DeliveryMethodName", ccsText, "");
        
        $this->DeliveryTypeName = new clsField("DeliveryTypeName", ccsText, "");
        
        $this->GivenName = new clsField("GivenName", ccsMemo, "");
        
        $this->PregnancyOutcome2ID = new clsField("PregnancyOutcome2ID", ccsInteger, "");
        
        $this->PregnancyOutcome3ID = new clsField("PregnancyOutcome3ID", ccsInteger, "");
        
        $this->PregnancyOutcome4ID = new clsField("PregnancyOutcome4ID", ccsMemo, "");
        

    }
//End DataSourceClass_Initialize Event

//SetOrder Method @3-589354F8
    function SetOrder($SorterName, $SorterDirection)
    {
        $this->Order = "";
        $this->Order = CCGetOrder($this->Order, $SorterName, $SorterDirection, 
            array("Sorter_PregnancyOutcome1ID" => array("PregnancyOutcome1ID", ""), 
            "Sorter_PregnancyOutcome2ID" => array("PregnancyOutcome2ID", ""), 
            "Sorter_PregnancyOutcome3ID" => array("PregnancyOutcome3ID", ""), 
            "Sorter_Partogram" => array("Partogram", ""), 
            "Sorter_PartnerDelivery" => array("PartnerDelivery", ""), 
            "Sorter_DataDelivery" => array("DataDelivery", ""), 
            "Sorter_DeliveryMethodName" => array("DeliveryMethodName", ""), 
            "Sorter_DeliveryTypeName" => array("DeliveryTypeName", "")));
    }
//End SetOrder Method

//Prepare Method @3-2B526D2D
    function Prepare()
    {
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->wp = new clsSQLParameters($this->ErrorBlock);
        $this->wp->AddParameter("1", "urls_DataDelivery", ccsDate, $DefaultDateFormat, $this->DateFormat, $this->Parameters["urls_DataDelivery"], "", false);
        $this->wp->AddParameter("2", "urls_FacilityName", ccsText, "", "", $this->Parameters["urls_FacilityName"], "", false);
        $this->wp->AddParameter("3", "urls_DeliveryMethodName", ccsText, "", "", $this->Parameters["urls_DeliveryMethodName"], "", false);
        $this->wp->AddParameter("4", "urls_DeliveryTypeName", ccsText, "", "", $this->Parameters["urls_DeliveryTypeName"], "", false);
        $this->wp->AddParameter("5", "urls_PregnancyOutcomeName", ccsText, "", "", $this->Parameters["urls_PregnancyOutcomeName"], "", false);
        $this->wp->AddParameter("6", "urls_Partogram", ccsInteger, "", "", $this->Parameters["urls_Partogram"], "", false);
        $this->wp->AddParameter("7", "urls_PartnerDelivery", ccsInteger, "", "", $this->Parameters["urls_PartnerDelivery"], "", false);
        $this->wp->AddParameter("8", "urls_FamilyName", ccsMemo, "", "", $this->Parameters["urls_FamilyName"], "", false);
        $this->wp->AddParameter("9", "urls_GivenName", ccsMemo, "", "", $this->Parameters["urls_GivenName"], "", false);
        $this->wp->Criterion[1] = $this->wp->Operation(opEqual, "DataDelivery", $this->wp->GetDBValue("1"), $this->ToSQL($this->wp->GetDBValue("1"), ccsDate),false);
        $this->wp->Criterion[2] = $this->wp->Operation(opContains, "FacilityName", $this->wp->GetDBValue("2"), $this->ToSQL($this->wp->GetDBValue("2"), ccsText),false);
        $this->wp->Criterion[3] = $this->wp->Operation(opContains, "DeliveryMethodName", $this->wp->GetDBValue("3"), $this->ToSQL($this->wp->GetDBValue("3"), ccsText),false);
        $this->wp->Criterion[4] = $this->wp->Operation(opContains, "DeliveryTypeName", $this->wp->GetDBValue("4"), $this->ToSQL($this->wp->GetDBValue("4"), ccsText),false);
        $this->wp->Criterion[5] = $this->wp->Operation(opContains, "PregnancyOutcomeName", $this->wp->GetDBValue("5"), $this->ToSQL($this->wp->GetDBValue("5"), ccsText),false);
        $this->wp->Criterion[6] = $this->wp->Operation(opEqual, "Partogram", $this->wp->GetDBValue("6"), $this->ToSQL($this->wp->GetDBValue("6"), ccsInteger),false);
        $this->wp->Criterion[7] = $this->wp->Operation(opEqual, "PartnerDelivery", $this->wp->GetDBValue("7"), $this->ToSQL($this->wp->GetDBValue("7"), ccsInteger),false);
        $this->wp->Criterion[8] = $this->wp->Operation(opContains, "FamilyName", $this->wp->GetDBValue("8"), $this->ToSQL($this->wp->GetDBValue("8"), ccsMemo),false);
        $this->wp->Criterion[9] = $this->wp->Operation(opContains, "GivenName", $this->wp->GetDBValue("9"), $this->ToSQL($this->wp->GetDBValue("9"), ccsMemo),false);
        $this->Where = $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, $this->wp->opAND(
             false, 
             $this->wp->Criterion[1], 
             $this->wp->Criterion[2]), 
             $this->wp->Criterion[3]), 
             $this->wp->Criterion[4]), 
             $this->wp->Criterion[5]), 
             $this->wp->Criterion[6]), 
             $this->wp->Criterion[7]), 
             $this->wp->Criterion[8]), 
             $this->wp->Criterion[9]);
    }
//End Prepare Method

//Open Method @3-D03ED0C1
    function Open()
    {
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeBuildSelect", $this->Parent);
        $this->SQL = "SELECT delivery.DeliveryMethodID AS delivery_DeliveryMethodID, delivery.DeliveryTypeID AS delivery_DeliveryTypeID, Partogram, delivery.FacilityID AS delivery_FacilityID,\n\n" .
        "FacilityName, facilities.FacilityID AS facilities_FacilityID, delivery.PregnancyID AS delivery_PregnancyID, pregnancy.PregnancyID AS pregnancy_PregnancyID,\n\n" .
        "pregnancy.PatientID AS pregnancy_PatientID, patient.PatientID AS patient_PatientID, FamilyName, GivenName, DataDelivery,\n\n" .
        "PartnerDelivery, DeliveryTypeName, DeliveryMethodName, PregnancyOutcome2ID, PregnancyOutcome3ID, PregnancyOutcome4ID, PregnancyOutcome1ID,\n\n" .
        "PregnancyOutcomeName, PregnancyOutcomeID \n\n" .
        "FROM (((((delivery LEFT JOIN facilities ON\n\n" .
        "delivery.FacilityID = facilities.FacilityID) LEFT JOIN pregnancy ON\n\n" .
        "delivery.PregnancyID = pregnancy.PregnancyID) LEFT JOIN deliverymethod ON\n\n" .
        "delivery.DeliveryMethodID = deliverymethod.DeliveryMethodID) LEFT JOIN deliverytype ON\n\n" .
        "delivery.DeliveryTypeID = deliverytype.DeliveryTypeID) LEFT JOIN pregnancy_outcome ON\n\n" .
        "pregnancy_outcome.PregnancyOutcomeID = delivery.PregnancyOutcome1ID AND pregnancy_outcome.PregnancyOutcomeID = delivery.PregnancyOutcome2ID AND pregnancy_outcome.PregnancyOutcomeID = delivery.PregnancyOutcome3ID AND pregnancy_outcome.PregnancyOutcomeID = delivery.PregnancyOutcome4ID) LEFT JOIN patient ON\n\n" .
        "pregnancy.PatientID = patient.PatientID {SQL_Where} {SQL_OrderBy}";
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeExecuteSelect", $this->Parent);
        $this->query(CCBuildSQL($this->SQL, $this->Where, "facilities.FacilityName asc" .  ($this->Order ? ", " . $this->Order: "")));
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "AfterExecuteSelect", $this->Parent);
    }
//End Open Method

//SetValues Method @3-C994E188
    function SetValues()
    {
        $this->FacilityName->SetDBValue($this->f("FacilityName"));
        $this->PregnancyOutcome1ID->SetDBValue(trim($this->f("PregnancyOutcome1ID")));
        $this->Partogram->SetDBValue(trim($this->f("Partogram")));
        $this->PartnerDelivery->SetDBValue(trim($this->f("PartnerDelivery")));
        $this->DataDelivery->SetDBValue(trim($this->f("DataDelivery")));
        $this->FamilyName->SetDBValue($this->f("FamilyName"));
        $this->DeliveryMethodName->SetDBValue($this->f("DeliveryMethodName"));
        $this->DeliveryTypeName->SetDBValue($this->f("DeliveryTypeName"));
        $this->GivenName->SetDBValue($this->f("GivenName"));
        $this->PregnancyOutcome2ID->SetDBValue(trim($this->f("PregnancyOutcome2ID")));
        $this->PregnancyOutcome3ID->SetDBValue(trim($this->f("PregnancyOutcome3ID")));
        $this->PregnancyOutcome4ID->SetDBValue($this->f("PregnancyOutcome4ID"));
    }
//End SetValues Method

} //End delivery_facilities_pregnDataSource Class @3-FCB6E20C

class clsRecorddelivery_deliverymethod_d { //delivery_deliverymethod_d Class @72-F27681D0

//Variables @72-9E315808

    // Public variables
    public $ComponentType = "Record";
    public $ComponentName;
    public $Parent;
    public $HTMLFormAction;
    public $PressedButton;
    public $Errors;
    public $ErrorBlock;
    public $FormSubmitted;
    public $FormEnctype;
    public $Visible;
    public $IsEmpty;

    public $CCSEvents = "";
    public $CCSEventResult;

    public $RelativePath = "";

    public $InsertAllowed = false;
    public $UpdateAllowed = false;
    public $DeleteAllowed = false;
    public $ReadAllowed   = false;
    public $EditMode      = false;
    public $ds;
    public $DataSource;
    public $ValidatingControls;
    public $Controls;
    public $Attributes;

    // Class variables
//End Variables

//Class_Initialize Event @72-F74EECB0
    function clsRecorddelivery_deliverymethod_d($RelativePath, & $Parent)
    {

        global $FileName;
        global $CCSLocales;
        global $DefaultDateFormat;
        $this->Visible = true;
        $this->Parent = & $Parent;
        $this->RelativePath = $RelativePath;
        $this->Errors = new clsErrors();
        $this->ErrorBlock = "Record delivery_deliverymethod_d/Error";
        $this->ReadAllowed = true;
        if($this->Visible)
        {
            $this->ComponentName = "delivery_deliverymethod_d";
            $this->Attributes = new clsAttributes($this->ComponentName . ":");
            $CCSForm = explode(":", CCGetFromGet("ccsForm", ""), 2);
            if(sizeof($CCSForm) == 1)
                $CCSForm[1] = "";
            list($FormName, $FormMethod) = $CCSForm;
            $this->FormEnctype = "application/x-www-form-urlencoded";
            $this->FormSubmitted = ($FormName == $this->ComponentName);
            $Method = $this->FormSubmitted ? ccsPost : ccsGet;
            $this->Button_DoSearch = new clsButton("Button_DoSearch", $Method, $this);
            $this->s_DataDelivery = new clsControl(ccsTextBox, "s_DataDelivery", "s_DataDelivery", ccsDate, $DefaultDateFormat, CCGetRequestParam("s_DataDelivery", $Method, NULL), $this);
            $this->DatePicker_s_DataDelivery = new clsDatePicker("DatePicker_s_DataDelivery", "delivery_deliverymethod_d", "s_DataDelivery", $this);
            $this->s_FacilityName = new clsControl(ccsTextBox, "s_FacilityName", "s_FacilityName", ccsText, "", CCGetRequestParam("s_FacilityName", $Method, NULL), $this);
            $this->s_DeliveryMethodName = new clsControl(ccsTextBox, "s_DeliveryMethodName", "s_DeliveryMethodName", ccsText, "", CCGetRequestParam("s_DeliveryMethodName", $Method, NULL), $this);
            $this->s_DeliveryTypeName = new clsControl(ccsTextBox, "s_DeliveryTypeName", "s_DeliveryTypeName", ccsText, "", CCGetRequestParam("s_DeliveryTypeName", $Method, NULL), $this);
            $this->s_PregnancyOutcomeName = new clsControl(ccsTextBox, "s_PregnancyOutcomeName", "s_PregnancyOutcomeName", ccsText, "", CCGetRequestParam("s_PregnancyOutcomeName", $Method, NULL), $this);
            $this->s_Partogram = new clsControl(ccsTextBox, "s_Partogram", "s_Partogram", ccsInteger, "", CCGetRequestParam("s_Partogram", $Method, NULL), $this);
            $this->s_PartnerDelivery = new clsControl(ccsTextBox, "s_PartnerDelivery", "s_PartnerDelivery", ccsInteger, "", CCGetRequestParam("s_PartnerDelivery", $Method, NULL), $this);
            $this->s_FamilyName = new clsControl(ccsTextBox, "s_FamilyName", "s_FamilyName", ccsMemo, "", CCGetRequestParam("s_FamilyName", $Method, NULL), $this);
            $this->s_GivenName = new clsControl(ccsTextBox, "s_GivenName", "s_GivenName", ccsMemo, "", CCGetRequestParam("s_GivenName", $Method, NULL), $this);
        }
    }
//End Class_Initialize Event

//Validate Method @72-68BCE3E8
    function Validate()
    {
        global $CCSLocales;
        $Validation = true;
        $Where = "";
        $Validation = ($this->s_DataDelivery->Validate() && $Validation);
        $Validation = ($this->s_FacilityName->Validate() && $Validation);
        $Validation = ($this->s_DeliveryMethodName->Validate() && $Validation);
        $Validation = ($this->s_DeliveryTypeName->Validate() && $Validation);
        $Validation = ($this->s_PregnancyOutcomeName->Validate() && $Validation);
        $Validation = ($this->s_Partogram->Validate() && $Validation);
        $Validation = ($this->s_PartnerDelivery->Validate() && $Validation);
        $Validation = ($this->s_FamilyName->Validate() && $Validation);
        $Validation = ($this->s_GivenName->Validate() && $Validation);
        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "OnValidate", $this);
        $Validation =  $Validation && ($this->s_DataDelivery->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_FacilityName->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_DeliveryMethodName->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_DeliveryTypeName->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_PregnancyOutcomeName->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_Partogram->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_PartnerDelivery->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_FamilyName->Errors->Count() == 0);
        $Validation =  $Validation && ($this->s_GivenName->Errors->Count() == 0);
        return (($this->Errors->Count() == 0) && $Validation);
    }
//End Validate Method

//CheckErrors Method @72-3BD37552
    function CheckErrors()
    {
        $errors = false;
        $errors = ($errors || $this->s_DataDelivery->Errors->Count());
        $errors = ($errors || $this->DatePicker_s_DataDelivery->Errors->Count());
        $errors = ($errors || $this->s_FacilityName->Errors->Count());
        $errors = ($errors || $this->s_DeliveryMethodName->Errors->Count());
        $errors = ($errors || $this->s_DeliveryTypeName->Errors->Count());
        $errors = ($errors || $this->s_PregnancyOutcomeName->Errors->Count());
        $errors = ($errors || $this->s_Partogram->Errors->Count());
        $errors = ($errors || $this->s_PartnerDelivery->Errors->Count());
        $errors = ($errors || $this->s_FamilyName->Errors->Count());
        $errors = ($errors || $this->s_GivenName->Errors->Count());
        $errors = ($errors || $this->Errors->Count());
        return $errors;
    }
//End CheckErrors Method

//MasterDetail @72-ED598703
function SetPrimaryKeys($keyArray)
{
    $this->PrimaryKeys = $keyArray;
}
function GetPrimaryKeys()
{
    return $this->PrimaryKeys;
}
function GetPrimaryKey($keyName)
{
    return $this->PrimaryKeys[$keyName];
}
//End MasterDetail

//Operation Method @72-CCC656B1
    function Operation()
    {
        if(!$this->Visible)
            return;

        global $Redirect;
        global $FileName;

        if(!$this->FormSubmitted) {
            return;
        }

        if($this->FormSubmitted) {
            $this->PressedButton = "Button_DoSearch";
            if($this->Button_DoSearch->Pressed) {
                $this->PressedButton = "Button_DoSearch";
            }
        }
        $Redirect = "report_statistical_delivery.php";
        if($this->Validate()) {
            if($this->PressedButton == "Button_DoSearch") {
                $Redirect = "report_statistical_delivery.php" . "?" . CCMergeQueryStrings(CCGetQueryString("Form", array("Button_DoSearch", "Button_DoSearch_x", "Button_DoSearch_y")));
                if(!CCGetEvent($this->Button_DoSearch->CCSEvents, "OnClick", $this->Button_DoSearch)) {
                    $Redirect = "";
                }
            }
        } else {
            $Redirect = "";
        }
    }
//End Operation Method

//Show Method @72-86DE6EF3
    function Show()
    {
        global $CCSUseAmp;
        global $Tpl;
        global $FileName;
        global $CCSLocales;
        $Error = "";

        if(!$this->Visible)
            return;

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeSelect", $this);


        $RecordBlock = "Record " . $this->ComponentName;
        $ParentPath = $Tpl->block_path;
        $Tpl->block_path = $ParentPath . "/" . $RecordBlock;
        $this->EditMode = $this->EditMode && $this->ReadAllowed;
        if (!$this->FormSubmitted) {
        }

        if($this->FormSubmitted || $this->CheckErrors()) {
            $Error = "";
            $Error = ComposeStrings($Error, $this->s_DataDelivery->Errors->ToString());
            $Error = ComposeStrings($Error, $this->DatePicker_s_DataDelivery->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_FacilityName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_DeliveryMethodName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_DeliveryTypeName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_PregnancyOutcomeName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_Partogram->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_PartnerDelivery->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_FamilyName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->s_GivenName->Errors->ToString());
            $Error = ComposeStrings($Error, $this->Errors->ToString());
            $Tpl->SetVar("Error", $Error);
            $Tpl->Parse("Error", false);
        }
        $CCSForm = $this->EditMode ? $this->ComponentName . ":" . "Edit" : $this->ComponentName;
        $this->HTMLFormAction = $FileName . "?" . CCAddParam(CCGetQueryString("QueryString", ""), "ccsForm", $CCSForm);
        $Tpl->SetVar("Action", !$CCSUseAmp ? $this->HTMLFormAction : str_replace("&", "&amp;", $this->HTMLFormAction));
        $Tpl->SetVar("HTMLFormName", $this->ComponentName);
        $Tpl->SetVar("HTMLFormEnctype", $this->FormEnctype);

        $this->CCSEventResult = CCGetEvent($this->CCSEvents, "BeforeShow", $this);
        $this->Attributes->Show();
        if(!$this->Visible) {
            $Tpl->block_path = $ParentPath;
            return;
        }

        $this->Button_DoSearch->Show();
        $this->s_DataDelivery->Show();
        $this->DatePicker_s_DataDelivery->Show();
        $this->s_FacilityName->Show();
        $this->s_DeliveryMethodName->Show();
        $this->s_DeliveryTypeName->Show();
        $this->s_PregnancyOutcomeName->Show();
        $this->s_Partogram->Show();
        $this->s_PartnerDelivery->Show();
        $this->s_FamilyName->Show();
        $this->s_GivenName->Show();
        $Tpl->parse();
        $Tpl->block_path = $ParentPath;
    }
//End Show Method

} //End delivery_deliverymethod_d Class @72-FCB6E20C

//Initialize Page @1-0B84A75C
// Variables
$FileName = "";
$Redirect = "";
$Tpl = "";
$TemplateFileName = "";
$BlockToParse = "";
$ComponentName = "";
$Attributes = "";

// Events;
$CCSEvents = "";
$CCSEventResult = "";

$FileName = FileName;
$Redirect = "";
$TemplateFileName = "report_statistical_delivery_facilities.html";
$BlockToParse = "main";
$TemplateEncoding = "UTF-8";
$ContentType = "text/html";
$PathToRoot = "./";
$Charset = $Charset ? $Charset : "utf-8";
//End Initialize Page

//Include events file @1-B22CA354
include_once("./report_statistical_delivery_facilities_events.php");
//End Include events file

//Before Initialize @1-E870CEBC
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeInitialize", $MainPage);
//End Before Initialize

//Initialize Objects @1-223BEB89
$DBregistry_db = new clsDBregistry_db();
$MainPage->Connections["registry_db"] = & $DBregistry_db;
$Attributes = new clsAttributes("page:");
$MainPage->Attributes = & $Attributes;

// Controls
$topmenu = new clstopmenu("", "topmenu", $MainPage);
$topmenu->Initialize();
$delivery_facilities_pregn = new clsReportdelivery_facilities_pregn("", $MainPage);
$delivery_deliverymethod_d = new clsRecorddelivery_deliverymethod_d("", $MainPage);
$Report_Print = new clsControl(ccsLink, "Report_Print", "Report_Print", ccsText, "", CCGetRequestParam("Report_Print", ccsGet, NULL), $MainPage);
$Report_Print->Page = "report_statistical_delivery.php";
$MainPage->topmenu = & $topmenu;
$MainPage->delivery_facilities_pregn = & $delivery_facilities_pregn;
$MainPage->delivery_deliverymethod_d = & $delivery_deliverymethod_d;
$MainPage->Report_Print = & $Report_Print;
$Report_Print->Parameters = CCGetQueryString("QueryString", array("ccsForm"));
$Report_Print->Parameters = CCAddParam($Report_Print->Parameters, "ViewMode", "Print");
$delivery_facilities_pregn->Initialize();

BindEvents();

$CCSEventResult = CCGetEvent($CCSEvents, "AfterInitialize", $MainPage);

if ($Charset) {
    header("Content-Type: " . $ContentType . "; charset=" . $Charset);
} else {
    header("Content-Type: " . $ContentType);
}
//End Initialize Objects

//Initialize HTML Template @1-A06E9207
$CCSEventResult = CCGetEvent($CCSEvents, "OnInitializeView", $MainPage);
$Tpl = new clsTemplate($FileEncoding, $TemplateEncoding);
$Tpl->LoadTemplate(PathToCurrentPage . $TemplateFileName, $BlockToParse, "UTF-8", "replace");
$Tpl->block_path = "/$BlockToParse";
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeShow", $MainPage);
$Attributes->SetValue("pathToRoot", "");
$Attributes->Show();
//End Initialize HTML Template

//Execute Components @1-0B282875
$topmenu->Operations();
$delivery_deliverymethod_d->Operation();
//End Execute Components

//Go to destination page @1-FED47A94
if($Redirect)
{
    $CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
    $DBregistry_db->close();
    header("Location: " . $Redirect);
    $topmenu->Class_Terminate();
    unset($topmenu);
    unset($delivery_facilities_pregn);
    unset($delivery_deliverymethod_d);
    unset($Tpl);
    exit;
}
//End Go to destination page

//Show Page @1-4F9B381B
$topmenu->Show();
$delivery_facilities_pregn->Show();
$delivery_deliverymethod_d->Show();
$Report_Print->Show();
$Tpl->block_path = "";
$Tpl->Parse($BlockToParse, false);
if (!isset($main_block)) $main_block = $Tpl->GetVar($BlockToParse);
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeOutput", $MainPage);
if ($CCSEventResult) echo $main_block;
//End Show Page

//Unload Page @1-1B954F8C
$CCSEventResult = CCGetEvent($CCSEvents, "BeforeUnload", $MainPage);
$DBregistry_db->close();
$topmenu->Class_Terminate();
unset($topmenu);
unset($delivery_facilities_pregn);
unset($delivery_deliverymethod_d);
unset($Tpl);
//End Unload Page


?>
